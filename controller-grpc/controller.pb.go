// Code generated by protoc-gen-go. DO NOT EDIT.
// source: controller.proto

package main

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReleaseType int32

const (
	ReleaseType_ANY    ReleaseType = 0
	ReleaseType_CODE   ReleaseType = 1
	ReleaseType_CONFIG ReleaseType = 2
)

var ReleaseType_name = map[int32]string{
	0: "ANY",
	1: "CODE",
	2: "CONFIG",
}

var ReleaseType_value = map[string]int32{
	"ANY":    0,
	"CODE":   1,
	"CONFIG": 2,
}

func (x ReleaseType) String() string {
	return proto.EnumName(ReleaseType_name, int32(x))
}

func (ReleaseType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{0}
}

type ScaleRequestState int32

const (
	ScaleRequestState_SCALE_PENDING   ScaleRequestState = 0
	ScaleRequestState_SCALE_CANCELLED ScaleRequestState = 1
	ScaleRequestState_SCALE_COMPLETE  ScaleRequestState = 2
)

var ScaleRequestState_name = map[int32]string{
	0: "SCALE_PENDING",
	1: "SCALE_CANCELLED",
	2: "SCALE_COMPLETE",
}

var ScaleRequestState_value = map[string]int32{
	"SCALE_PENDING":   0,
	"SCALE_CANCELLED": 1,
	"SCALE_COMPLETE":  2,
}

func (x ScaleRequestState) String() string {
	return proto.EnumName(ScaleRequestState_name, int32(x))
}

func (ScaleRequestState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{1}
}

// See github.com/flynn/flynn/logaggregator NewMessageFromSyslog
type LogAggregatorStreamSource int32

const (
	LogAggregatorStreamSource_APP LogAggregatorStreamSource = 0
)

var LogAggregatorStreamSource_name = map[int32]string{
	0: "APP",
}

var LogAggregatorStreamSource_value = map[string]int32{
	"APP": 0,
}

func (x LogAggregatorStreamSource) String() string {
	return proto.EnumName(LogAggregatorStreamSource_name, int32(x))
}

func (LogAggregatorStreamSource) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{2}
}

// See github.com/flynn/flynn/logaggregator/types StreamType
type LogAggregatorStreamType int32

const (
	LogAggregatorStreamType_STDOUT  LogAggregatorStreamType = 0
	LogAggregatorStreamType_STDERR  LogAggregatorStreamType = 1
	LogAggregatorStreamType_INIT    LogAggregatorStreamType = 2
	LogAggregatorStreamType_UNKNOWN LogAggregatorStreamType = 3
)

var LogAggregatorStreamType_name = map[int32]string{
	0: "STDOUT",
	1: "STDERR",
	2: "INIT",
	3: "UNKNOWN",
}

var LogAggregatorStreamType_value = map[string]int32{
	"STDOUT":  0,
	"STDERR":  1,
	"INIT":    2,
	"UNKNOWN": 3,
}

func (x LogAggregatorStreamType) String() string {
	return proto.EnumName(LogAggregatorStreamType_name, int32(x))
}

func (LogAggregatorStreamType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{3}
}

type DeploymentStatus int32

const (
	DeploymentStatus_PENDING  DeploymentStatus = 0
	DeploymentStatus_FAILED   DeploymentStatus = 1
	DeploymentStatus_RUNNING  DeploymentStatus = 2
	DeploymentStatus_COMPLETE DeploymentStatus = 3
)

var DeploymentStatus_name = map[int32]string{
	0: "PENDING",
	1: "FAILED",
	2: "RUNNING",
	3: "COMPLETE",
}

var DeploymentStatus_value = map[string]int32{
	"PENDING":  0,
	"FAILED":   1,
	"RUNNING":  2,
	"COMPLETE": 3,
}

func (x DeploymentStatus) String() string {
	return proto.EnumName(DeploymentStatus_name, int32(x))
}

func (DeploymentStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{4}
}

type DeploymentEvent_JobState int32

const (
	DeploymentEvent_PENDING  DeploymentEvent_JobState = 0
	DeploymentEvent_BLOCKED  DeploymentEvent_JobState = 1
	DeploymentEvent_STARTING DeploymentEvent_JobState = 2
	DeploymentEvent_UP       DeploymentEvent_JobState = 3
	DeploymentEvent_STOPPING DeploymentEvent_JobState = 5
	DeploymentEvent_DOWN     DeploymentEvent_JobState = 6
	// CRASHED and FAILURE are no longer valid job states,
	// but we still need to handle them in case they are set by old
	// schedulers still using the legacy code.
	DeploymentEvent_CRASHED DeploymentEvent_JobState = 7
	DeploymentEvent_FAILED  DeploymentEvent_JobState = 8
)

var DeploymentEvent_JobState_name = map[int32]string{
	0: "PENDING",
	1: "BLOCKED",
	2: "STARTING",
	3: "UP",
	5: "STOPPING",
	6: "DOWN",
	7: "CRASHED",
	8: "FAILED",
}

var DeploymentEvent_JobState_value = map[string]int32{
	"PENDING":  0,
	"BLOCKED":  1,
	"STARTING": 2,
	"UP":       3,
	"STOPPING": 5,
	"DOWN":     6,
	"CRASHED":  7,
	"FAILED":   8,
}

func (x DeploymentEvent_JobState) String() string {
	return proto.EnumName(DeploymentEvent_JobState_name, int32(x))
}

func (DeploymentEvent_JobState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{32, 0}
}

type ListAppsRequest struct {
	PageSize             int32    `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken            string   `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAppsRequest) Reset()         { *m = ListAppsRequest{} }
func (m *ListAppsRequest) String() string { return proto.CompactTextString(m) }
func (*ListAppsRequest) ProtoMessage()    {}
func (*ListAppsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{0}
}

func (m *ListAppsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAppsRequest.Unmarshal(m, b)
}
func (m *ListAppsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAppsRequest.Marshal(b, m, deterministic)
}
func (m *ListAppsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAppsRequest.Merge(m, src)
}
func (m *ListAppsRequest) XXX_Size() int {
	return xxx_messageInfo_ListAppsRequest.Size(m)
}
func (m *ListAppsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAppsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAppsRequest proto.InternalMessageInfo

func (m *ListAppsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListAppsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListAppsResponse struct {
	Apps                 []*App   `protobuf:"bytes,1,rep,name=apps,proto3" json:"apps,omitempty"`
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAppsResponse) Reset()         { *m = ListAppsResponse{} }
func (m *ListAppsResponse) String() string { return proto.CompactTextString(m) }
func (*ListAppsResponse) ProtoMessage()    {}
func (*ListAppsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{1}
}

func (m *ListAppsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAppsResponse.Unmarshal(m, b)
}
func (m *ListAppsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAppsResponse.Marshal(b, m, deterministic)
}
func (m *ListAppsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAppsResponse.Merge(m, src)
}
func (m *ListAppsResponse) XXX_Size() int {
	return xxx_messageInfo_ListAppsResponse.Size(m)
}
func (m *ListAppsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAppsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListAppsResponse proto.InternalMessageInfo

func (m *ListAppsResponse) GetApps() []*App {
	if m != nil {
		return m.Apps
	}
	return nil
}

func (m *ListAppsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetAppRequest struct {
	// name = "apps/APP_ID"
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAppRequest) Reset()         { *m = GetAppRequest{} }
func (m *GetAppRequest) String() string { return proto.CompactTextString(m) }
func (*GetAppRequest) ProtoMessage()    {}
func (*GetAppRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{2}
}

func (m *GetAppRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAppRequest.Unmarshal(m, b)
}
func (m *GetAppRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAppRequest.Marshal(b, m, deterministic)
}
func (m *GetAppRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAppRequest.Merge(m, src)
}
func (m *GetAppRequest) XXX_Size() int {
	return xxx_messageInfo_GetAppRequest.Size(m)
}
func (m *GetAppRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAppRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAppRequest proto.InternalMessageInfo

func (m *GetAppRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UpdateAppRequest struct {
	App                  *App                  `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateAppRequest) Reset()         { *m = UpdateAppRequest{} }
func (m *UpdateAppRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateAppRequest) ProtoMessage()    {}
func (*UpdateAppRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{3}
}

func (m *UpdateAppRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAppRequest.Unmarshal(m, b)
}
func (m *UpdateAppRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAppRequest.Marshal(b, m, deterministic)
}
func (m *UpdateAppRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAppRequest.Merge(m, src)
}
func (m *UpdateAppRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateAppRequest.Size(m)
}
func (m *UpdateAppRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAppRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAppRequest proto.InternalMessageInfo

func (m *UpdateAppRequest) GetApp() *App {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *UpdateAppRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

// TODO(jvatic): Rename to AppReleaseRequest
type GetAppReleaseRequest struct {
	// parent = "apps/APP_ID"
	Parent               string   `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAppReleaseRequest) Reset()         { *m = GetAppReleaseRequest{} }
func (m *GetAppReleaseRequest) String() string { return proto.CompactTextString(m) }
func (*GetAppReleaseRequest) ProtoMessage()    {}
func (*GetAppReleaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{4}
}

func (m *GetAppReleaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAppReleaseRequest.Unmarshal(m, b)
}
func (m *GetAppReleaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAppReleaseRequest.Marshal(b, m, deterministic)
}
func (m *GetAppReleaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAppReleaseRequest.Merge(m, src)
}
func (m *GetAppReleaseRequest) XXX_Size() int {
	return xxx_messageInfo_GetAppReleaseRequest.Size(m)
}
func (m *GetAppReleaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAppReleaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAppReleaseRequest proto.InternalMessageInfo

func (m *GetAppReleaseRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

type CreateScaleRequest struct {
	// parent = "apps/APP_ID/releases/RELEASE_ID"
	Parent    string           `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Processes map[string]int32 `protobuf:"bytes,2,rep,name=processes,proto3" json:"processes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// profobuf doesn't support maps within maps, so map[string]map[string]string
	// could not be reproduced
	Tags                 map[string]*DeploymentProcessTags `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *CreateScaleRequest) Reset()         { *m = CreateScaleRequest{} }
func (m *CreateScaleRequest) String() string { return proto.CompactTextString(m) }
func (*CreateScaleRequest) ProtoMessage()    {}
func (*CreateScaleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{5}
}

func (m *CreateScaleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateScaleRequest.Unmarshal(m, b)
}
func (m *CreateScaleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateScaleRequest.Marshal(b, m, deterministic)
}
func (m *CreateScaleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateScaleRequest.Merge(m, src)
}
func (m *CreateScaleRequest) XXX_Size() int {
	return xxx_messageInfo_CreateScaleRequest.Size(m)
}
func (m *CreateScaleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateScaleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateScaleRequest proto.InternalMessageInfo

func (m *CreateScaleRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateScaleRequest) GetProcesses() map[string]int32 {
	if m != nil {
		return m.Processes
	}
	return nil
}

func (m *CreateScaleRequest) GetTags() map[string]*DeploymentProcessTags {
	if m != nil {
		return m.Tags
	}
	return nil
}

type ListScaleRequestsRequest struct {
	// parent = "apps/APP_ID"
	Parent               string   `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListScaleRequestsRequest) Reset()         { *m = ListScaleRequestsRequest{} }
func (m *ListScaleRequestsRequest) String() string { return proto.CompactTextString(m) }
func (*ListScaleRequestsRequest) ProtoMessage()    {}
func (*ListScaleRequestsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{6}
}

func (m *ListScaleRequestsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListScaleRequestsRequest.Unmarshal(m, b)
}
func (m *ListScaleRequestsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListScaleRequestsRequest.Marshal(b, m, deterministic)
}
func (m *ListScaleRequestsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListScaleRequestsRequest.Merge(m, src)
}
func (m *ListScaleRequestsRequest) XXX_Size() int {
	return xxx_messageInfo_ListScaleRequestsRequest.Size(m)
}
func (m *ListScaleRequestsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListScaleRequestsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListScaleRequestsRequest proto.InternalMessageInfo

func (m *ListScaleRequestsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

type ListScaleRequestsResponse struct {
	ScaleRequests        []*ScaleRequest `protobuf:"bytes,1,rep,name=scale_requests,json=scaleRequests,proto3" json:"scale_requests,omitempty"`
	NextPageToken        string          `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListScaleRequestsResponse) Reset()         { *m = ListScaleRequestsResponse{} }
func (m *ListScaleRequestsResponse) String() string { return proto.CompactTextString(m) }
func (*ListScaleRequestsResponse) ProtoMessage()    {}
func (*ListScaleRequestsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{7}
}

func (m *ListScaleRequestsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListScaleRequestsResponse.Unmarshal(m, b)
}
func (m *ListScaleRequestsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListScaleRequestsResponse.Marshal(b, m, deterministic)
}
func (m *ListScaleRequestsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListScaleRequestsResponse.Merge(m, src)
}
func (m *ListScaleRequestsResponse) XXX_Size() int {
	return xxx_messageInfo_ListScaleRequestsResponse.Size(m)
}
func (m *ListScaleRequestsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListScaleRequestsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListScaleRequestsResponse proto.InternalMessageInfo

func (m *ListScaleRequestsResponse) GetScaleRequests() []*ScaleRequest {
	if m != nil {
		return m.ScaleRequests
	}
	return nil
}

func (m *ListScaleRequestsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetAppFormationRequest struct {
	// parent = "apps/APP_ID"
	Parent               string   `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAppFormationRequest) Reset()         { *m = GetAppFormationRequest{} }
func (m *GetAppFormationRequest) String() string { return proto.CompactTextString(m) }
func (*GetAppFormationRequest) ProtoMessage()    {}
func (*GetAppFormationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{8}
}

func (m *GetAppFormationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAppFormationRequest.Unmarshal(m, b)
}
func (m *GetAppFormationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAppFormationRequest.Marshal(b, m, deterministic)
}
func (m *GetAppFormationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAppFormationRequest.Merge(m, src)
}
func (m *GetAppFormationRequest) XXX_Size() int {
	return xxx_messageInfo_GetAppFormationRequest.Size(m)
}
func (m *GetAppFormationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAppFormationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAppFormationRequest proto.InternalMessageInfo

func (m *GetAppFormationRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

type GetReleaseRequest struct {
	// name = "apps/APP_ID/releases/RELEASE_ID"
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReleaseRequest) Reset()         { *m = GetReleaseRequest{} }
func (m *GetReleaseRequest) String() string { return proto.CompactTextString(m) }
func (*GetReleaseRequest) ProtoMessage()    {}
func (*GetReleaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{9}
}

func (m *GetReleaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReleaseRequest.Unmarshal(m, b)
}
func (m *GetReleaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReleaseRequest.Marshal(b, m, deterministic)
}
func (m *GetReleaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReleaseRequest.Merge(m, src)
}
func (m *GetReleaseRequest) XXX_Size() int {
	return xxx_messageInfo_GetReleaseRequest.Size(m)
}
func (m *GetReleaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReleaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetReleaseRequest proto.InternalMessageInfo

func (m *GetReleaseRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// See github.com/flynn/flynn/logaggregator/types LogOpts
type LogAggregatorLogOpts struct {
	Follow bool `protobuf:"varint,1,opt,name=follow,proto3" json:"follow,omitempty"`
	// job = "apps/APP_ID/jobs/JOB_ID"
	Job                  string                    `protobuf:"bytes,2,opt,name=job,proto3" json:"job,omitempty"`
	Lines                int32                     `protobuf:"varint,3,opt,name=lines,proto3" json:"lines,omitempty"`
	ProcessType          string                    `protobuf:"bytes,4,opt,name=process_type,json=processType,proto3" json:"process_type,omitempty"`
	StreamTypes          []LogAggregatorStreamType `protobuf:"varint,5,rep,packed,name=stream_types,json=streamTypes,proto3,enum=controller.LogAggregatorStreamType" json:"stream_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *LogAggregatorLogOpts) Reset()         { *m = LogAggregatorLogOpts{} }
func (m *LogAggregatorLogOpts) String() string { return proto.CompactTextString(m) }
func (*LogAggregatorLogOpts) ProtoMessage()    {}
func (*LogAggregatorLogOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{10}
}

func (m *LogAggregatorLogOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogAggregatorLogOpts.Unmarshal(m, b)
}
func (m *LogAggregatorLogOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogAggregatorLogOpts.Marshal(b, m, deterministic)
}
func (m *LogAggregatorLogOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogAggregatorLogOpts.Merge(m, src)
}
func (m *LogAggregatorLogOpts) XXX_Size() int {
	return xxx_messageInfo_LogAggregatorLogOpts.Size(m)
}
func (m *LogAggregatorLogOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_LogAggregatorLogOpts.DiscardUnknown(m)
}

var xxx_messageInfo_LogAggregatorLogOpts proto.InternalMessageInfo

func (m *LogAggregatorLogOpts) GetFollow() bool {
	if m != nil {
		return m.Follow
	}
	return false
}

func (m *LogAggregatorLogOpts) GetJob() string {
	if m != nil {
		return m.Job
	}
	return ""
}

func (m *LogAggregatorLogOpts) GetLines() int32 {
	if m != nil {
		return m.Lines
	}
	return 0
}

func (m *LogAggregatorLogOpts) GetProcessType() string {
	if m != nil {
		return m.ProcessType
	}
	return ""
}

func (m *LogAggregatorLogOpts) GetStreamTypes() []LogAggregatorStreamType {
	if m != nil {
		return m.StreamTypes
	}
	return nil
}

type StreamAppLogRequest struct {
	// name = "apps/APP_ID"
	Name                 string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Opts                 *LogAggregatorLogOpts `protobuf:"bytes,2,opt,name=opts,proto3" json:"opts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *StreamAppLogRequest) Reset()         { *m = StreamAppLogRequest{} }
func (m *StreamAppLogRequest) String() string { return proto.CompactTextString(m) }
func (*StreamAppLogRequest) ProtoMessage()    {}
func (*StreamAppLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{11}
}

func (m *StreamAppLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamAppLogRequest.Unmarshal(m, b)
}
func (m *StreamAppLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamAppLogRequest.Marshal(b, m, deterministic)
}
func (m *StreamAppLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamAppLogRequest.Merge(m, src)
}
func (m *StreamAppLogRequest) XXX_Size() int {
	return xxx_messageInfo_StreamAppLogRequest.Size(m)
}
func (m *StreamAppLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamAppLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamAppLogRequest proto.InternalMessageInfo

func (m *StreamAppLogRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StreamAppLogRequest) GetOpts() *LogAggregatorLogOpts {
	if m != nil {
		return m.Opts
	}
	return nil
}

type CreateReleaseRequest struct {
	// parent = "apps/APP_ID"
	Parent               string   `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Release              *Release `protobuf:"bytes,2,opt,name=release,proto3" json:"release,omitempty"`
	RequestId            string   `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateReleaseRequest) Reset()         { *m = CreateReleaseRequest{} }
func (m *CreateReleaseRequest) String() string { return proto.CompactTextString(m) }
func (*CreateReleaseRequest) ProtoMessage()    {}
func (*CreateReleaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{12}
}

func (m *CreateReleaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReleaseRequest.Unmarshal(m, b)
}
func (m *CreateReleaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReleaseRequest.Marshal(b, m, deterministic)
}
func (m *CreateReleaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReleaseRequest.Merge(m, src)
}
func (m *CreateReleaseRequest) XXX_Size() int {
	return xxx_messageInfo_CreateReleaseRequest.Size(m)
}
func (m *CreateReleaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReleaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReleaseRequest proto.InternalMessageInfo

func (m *CreateReleaseRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateReleaseRequest) GetRelease() *Release {
	if m != nil {
		return m.Release
	}
	return nil
}

func (m *CreateReleaseRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

type ListDeploymentsRequest struct {
	PageSize             int32       `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken            string      `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Parent               string      `protobuf:"bytes,3,opt,name=parent,proto3" json:"parent,omitempty"`
	FilterType           ReleaseType `protobuf:"varint,4,opt,name=filter_type,json=filterType,proto3,enum=controller.ReleaseType" json:"filter_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListDeploymentsRequest) Reset()         { *m = ListDeploymentsRequest{} }
func (m *ListDeploymentsRequest) String() string { return proto.CompactTextString(m) }
func (*ListDeploymentsRequest) ProtoMessage()    {}
func (*ListDeploymentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{13}
}

func (m *ListDeploymentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeploymentsRequest.Unmarshal(m, b)
}
func (m *ListDeploymentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeploymentsRequest.Marshal(b, m, deterministic)
}
func (m *ListDeploymentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeploymentsRequest.Merge(m, src)
}
func (m *ListDeploymentsRequest) XXX_Size() int {
	return xxx_messageInfo_ListDeploymentsRequest.Size(m)
}
func (m *ListDeploymentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeploymentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeploymentsRequest proto.InternalMessageInfo

func (m *ListDeploymentsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListDeploymentsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListDeploymentsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListDeploymentsRequest) GetFilterType() ReleaseType {
	if m != nil {
		return m.FilterType
	}
	return ReleaseType_ANY
}

type ListDeploymentsResponse struct {
	Deployments          []*ExpandedDeployment `protobuf:"bytes,1,rep,name=deployments,proto3" json:"deployments,omitempty"`
	NextPageToken        string                `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ListDeploymentsResponse) Reset()         { *m = ListDeploymentsResponse{} }
func (m *ListDeploymentsResponse) String() string { return proto.CompactTextString(m) }
func (*ListDeploymentsResponse) ProtoMessage()    {}
func (*ListDeploymentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{14}
}

func (m *ListDeploymentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeploymentsResponse.Unmarshal(m, b)
}
func (m *ListDeploymentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeploymentsResponse.Marshal(b, m, deterministic)
}
func (m *ListDeploymentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeploymentsResponse.Merge(m, src)
}
func (m *ListDeploymentsResponse) XXX_Size() int {
	return xxx_messageInfo_ListDeploymentsResponse.Size(m)
}
func (m *ListDeploymentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeploymentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeploymentsResponse proto.InternalMessageInfo

func (m *ListDeploymentsResponse) GetDeployments() []*ExpandedDeployment {
	if m != nil {
		return m.Deployments
	}
	return nil
}

func (m *ListDeploymentsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type CreateDeploymentRequest struct {
	// parent = "apps/APP_ID"
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// release = Release.name
	Release   string `protobuf:"bytes,2,opt,name=release,proto3" json:"release,omitempty"`
	RequestId string `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// optional scale request
	ScaleRequest         *CreateScaleRequest `protobuf:"bytes,4,opt,name=scale_request,json=scaleRequest,proto3" json:"scale_request,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CreateDeploymentRequest) Reset()         { *m = CreateDeploymentRequest{} }
func (m *CreateDeploymentRequest) String() string { return proto.CompactTextString(m) }
func (*CreateDeploymentRequest) ProtoMessage()    {}
func (*CreateDeploymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{15}
}

func (m *CreateDeploymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeploymentRequest.Unmarshal(m, b)
}
func (m *CreateDeploymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeploymentRequest.Marshal(b, m, deterministic)
}
func (m *CreateDeploymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeploymentRequest.Merge(m, src)
}
func (m *CreateDeploymentRequest) XXX_Size() int {
	return xxx_messageInfo_CreateDeploymentRequest.Size(m)
}
func (m *CreateDeploymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeploymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeploymentRequest proto.InternalMessageInfo

func (m *CreateDeploymentRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateDeploymentRequest) GetRelease() string {
	if m != nil {
		return m.Release
	}
	return ""
}

func (m *CreateDeploymentRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *CreateDeploymentRequest) GetScaleRequest() *CreateScaleRequest {
	if m != nil {
		return m.ScaleRequest
	}
	return nil
}

type App struct {
	// name = "apps/APP_ID"
	Name          string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DisplayName   string               `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Labels        map[string]string    `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreateTime    *timestamp.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime    *timestamp.Timestamp `protobuf:"bytes,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	DeployTimeout int32                `protobuf:"varint,6,opt,name=deploy_timeout,json=deployTimeout,proto3" json:"deploy_timeout,omitempty"`
	Strategy      string               `protobuf:"bytes,7,opt,name=strategy,proto3" json:"strategy,omitempty"`
	// release = Release.name
	Release              string   `protobuf:"bytes,8,opt,name=release,proto3" json:"release,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *App) Reset()         { *m = App{} }
func (m *App) String() string { return proto.CompactTextString(m) }
func (*App) ProtoMessage()    {}
func (*App) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{16}
}

func (m *App) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_App.Unmarshal(m, b)
}
func (m *App) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_App.Marshal(b, m, deterministic)
}
func (m *App) XXX_Merge(src proto.Message) {
	xxx_messageInfo_App.Merge(m, src)
}
func (m *App) XXX_Size() int {
	return xxx_messageInfo_App.Size(m)
}
func (m *App) XXX_DiscardUnknown() {
	xxx_messageInfo_App.DiscardUnknown(m)
}

var xxx_messageInfo_App proto.InternalMessageInfo

func (m *App) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *App) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *App) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *App) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *App) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

func (m *App) GetDeployTimeout() int32 {
	if m != nil {
		return m.DeployTimeout
	}
	return 0
}

func (m *App) GetStrategy() string {
	if m != nil {
		return m.Strategy
	}
	return ""
}

func (m *App) GetRelease() string {
	if m != nil {
		return m.Release
	}
	return ""
}

// See github.com/flynn/flynn/host/types Mount
type HostHealthCheck struct {
	// Type is one of tcp, http, https
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Interval is the time to wait between checks after the service has been
	// marked as up. It defaults to two seconds.
	Interval *duration.Duration `protobuf:"bytes,3,opt,name=interval,proto3" json:"interval,omitempty"`
	// Threshold is the number of consecutive checks of the same status before
	// a service will be marked as up or down after coming up for the first
	// time. It defaults to 2.
	Threshold int32 `protobuf:"varint,4,opt,name=threshold,proto3" json:"threshold,omitempty"`
	// If KillDown is true, the job will be killed if the service goes down (or
	// does not come up)
	KillDown bool `protobuf:"varint,5,opt,name=kill_down,json=killDown,proto3" json:"kill_down,omitempty"`
	// StartTimeout is the maximum duration that a service can take to come up
	// for the first time if KillDown is true. It defaults to ten seconds.
	StartTimeout *duration.Duration `protobuf:"bytes,6,opt,name=start_timeout,json=startTimeout,proto3" json:"start_timeout,omitempty"`
	// Extra optional config fields for http/https checks
	Path                 string   `protobuf:"bytes,7,opt,name=path,proto3" json:"path,omitempty"`
	Host                 string   `protobuf:"bytes,8,opt,name=host,proto3" json:"host,omitempty"`
	Match                string   `protobuf:"bytes,9,opt,name=match,proto3" json:"match,omitempty"`
	Status               int32    `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostHealthCheck) Reset()         { *m = HostHealthCheck{} }
func (m *HostHealthCheck) String() string { return proto.CompactTextString(m) }
func (*HostHealthCheck) ProtoMessage()    {}
func (*HostHealthCheck) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{17}
}

func (m *HostHealthCheck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostHealthCheck.Unmarshal(m, b)
}
func (m *HostHealthCheck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostHealthCheck.Marshal(b, m, deterministic)
}
func (m *HostHealthCheck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostHealthCheck.Merge(m, src)
}
func (m *HostHealthCheck) XXX_Size() int {
	return xxx_messageInfo_HostHealthCheck.Size(m)
}
func (m *HostHealthCheck) XXX_DiscardUnknown() {
	xxx_messageInfo_HostHealthCheck.DiscardUnknown(m)
}

var xxx_messageInfo_HostHealthCheck proto.InternalMessageInfo

func (m *HostHealthCheck) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *HostHealthCheck) GetInterval() *duration.Duration {
	if m != nil {
		return m.Interval
	}
	return nil
}

func (m *HostHealthCheck) GetThreshold() int32 {
	if m != nil {
		return m.Threshold
	}
	return 0
}

func (m *HostHealthCheck) GetKillDown() bool {
	if m != nil {
		return m.KillDown
	}
	return false
}

func (m *HostHealthCheck) GetStartTimeout() *duration.Duration {
	if m != nil {
		return m.StartTimeout
	}
	return nil
}

func (m *HostHealthCheck) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *HostHealthCheck) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *HostHealthCheck) GetMatch() string {
	if m != nil {
		return m.Match
	}
	return ""
}

func (m *HostHealthCheck) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

// See github.com/flynn/flynn/host/types Mount
type HostService struct {
	DisplayName string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Create the service in service discovery
	Create               bool             `protobuf:"varint,2,opt,name=create,proto3" json:"create,omitempty"`
	Check                *HostHealthCheck `protobuf:"bytes,3,opt,name=check,proto3" json:"check,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *HostService) Reset()         { *m = HostService{} }
func (m *HostService) String() string { return proto.CompactTextString(m) }
func (*HostService) ProtoMessage()    {}
func (*HostService) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{18}
}

func (m *HostService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostService.Unmarshal(m, b)
}
func (m *HostService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostService.Marshal(b, m, deterministic)
}
func (m *HostService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostService.Merge(m, src)
}
func (m *HostService) XXX_Size() int {
	return xxx_messageInfo_HostService.Size(m)
}
func (m *HostService) XXX_DiscardUnknown() {
	xxx_messageInfo_HostService.DiscardUnknown(m)
}

var xxx_messageInfo_HostService proto.InternalMessageInfo

func (m *HostService) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *HostService) GetCreate() bool {
	if m != nil {
		return m.Create
	}
	return false
}

func (m *HostService) GetCheck() *HostHealthCheck {
	if m != nil {
		return m.Check
	}
	return nil
}

type Port struct {
	Port                 int32        `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Proto                string       `protobuf:"bytes,2,opt,name=proto,proto3" json:"proto,omitempty"`
	Service              *HostService `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Port) Reset()         { *m = Port{} }
func (m *Port) String() string { return proto.CompactTextString(m) }
func (*Port) ProtoMessage()    {}
func (*Port) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{19}
}

func (m *Port) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Port.Unmarshal(m, b)
}
func (m *Port) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Port.Marshal(b, m, deterministic)
}
func (m *Port) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Port.Merge(m, src)
}
func (m *Port) XXX_Size() int {
	return xxx_messageInfo_Port.Size(m)
}
func (m *Port) XXX_DiscardUnknown() {
	xxx_messageInfo_Port.DiscardUnknown(m)
}

var xxx_messageInfo_Port proto.InternalMessageInfo

func (m *Port) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Port) GetProto() string {
	if m != nil {
		return m.Proto
	}
	return ""
}

func (m *Port) GetService() *HostService {
	if m != nil {
		return m.Service
	}
	return nil
}

type VolumeReq struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	DeleteOnStop         bool     `protobuf:"varint,2,opt,name=delete_on_stop,json=deleteOnStop,proto3" json:"delete_on_stop,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeReq) Reset()         { *m = VolumeReq{} }
func (m *VolumeReq) String() string { return proto.CompactTextString(m) }
func (*VolumeReq) ProtoMessage()    {}
func (*VolumeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{20}
}

func (m *VolumeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeReq.Unmarshal(m, b)
}
func (m *VolumeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeReq.Marshal(b, m, deterministic)
}
func (m *VolumeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeReq.Merge(m, src)
}
func (m *VolumeReq) XXX_Size() int {
	return xxx_messageInfo_VolumeReq.Size(m)
}
func (m *VolumeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeReq.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeReq proto.InternalMessageInfo

func (m *VolumeReq) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *VolumeReq) GetDeleteOnStop() bool {
	if m != nil {
		return m.DeleteOnStop
	}
	return false
}

// See github.com/flynn/flynn/host/resource Spec
type HostResourceSpec struct {
	// Request, if set, is the amount of resource a job expects to consume,
	// so the job should only be placed on a host with at least this amount
	// of resource available, and once scheduled this amount of resource
	// should then be unavailable on the given host.
	Request int64 `protobuf:"varint,1,opt,name=request,proto3" json:"request,omitempty"`
	// Limit, if set, is an upper limit on the amount of resource a job can
	// consume, the outcome of hitting this limit being implementation
	// defined (e.g. a system error, throttling, catchable / uncatchable
	// signals etc.)
	Limit                int64    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostResourceSpec) Reset()         { *m = HostResourceSpec{} }
func (m *HostResourceSpec) String() string { return proto.CompactTextString(m) }
func (*HostResourceSpec) ProtoMessage()    {}
func (*HostResourceSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{21}
}

func (m *HostResourceSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostResourceSpec.Unmarshal(m, b)
}
func (m *HostResourceSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostResourceSpec.Marshal(b, m, deterministic)
}
func (m *HostResourceSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostResourceSpec.Merge(m, src)
}
func (m *HostResourceSpec) XXX_Size() int {
	return xxx_messageInfo_HostResourceSpec.Size(m)
}
func (m *HostResourceSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_HostResourceSpec.DiscardUnknown(m)
}

var xxx_messageInfo_HostResourceSpec proto.InternalMessageInfo

func (m *HostResourceSpec) GetRequest() int64 {
	if m != nil {
		return m.Request
	}
	return 0
}

func (m *HostResourceSpec) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// See github.com/flynn/flynn/host/types Mount
type HostMount struct {
	Location             string   `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Target               string   `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Writable             bool     `protobuf:"varint,3,opt,name=writable,proto3" json:"writable,omitempty"`
	Device               string   `protobuf:"bytes,4,opt,name=device,proto3" json:"device,omitempty"`
	Data                 string   `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Flags                int32    `protobuf:"varint,6,opt,name=flags,proto3" json:"flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostMount) Reset()         { *m = HostMount{} }
func (m *HostMount) String() string { return proto.CompactTextString(m) }
func (*HostMount) ProtoMessage()    {}
func (*HostMount) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{22}
}

func (m *HostMount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostMount.Unmarshal(m, b)
}
func (m *HostMount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostMount.Marshal(b, m, deterministic)
}
func (m *HostMount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostMount.Merge(m, src)
}
func (m *HostMount) XXX_Size() int {
	return xxx_messageInfo_HostMount.Size(m)
}
func (m *HostMount) XXX_DiscardUnknown() {
	xxx_messageInfo_HostMount.DiscardUnknown(m)
}

var xxx_messageInfo_HostMount proto.InternalMessageInfo

func (m *HostMount) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *HostMount) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *HostMount) GetWritable() bool {
	if m != nil {
		return m.Writable
	}
	return false
}

func (m *HostMount) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *HostMount) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *HostMount) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

// See github.com/opencontainers/runc/libcontainer/configs Device
type LibContainerDevice struct {
	// Device type, block, char, etc.
	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	// Path to the device.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Major is the device's major number.
	Major int64 `protobuf:"varint,3,opt,name=major,proto3" json:"major,omitempty"`
	// Minor is the device's minor number.
	Minor int64 `protobuf:"varint,4,opt,name=minor,proto3" json:"minor,omitempty"`
	// Cgroup permissions format, rwm.
	Permissions string `protobuf:"bytes,5,opt,name=permissions,proto3" json:"permissions,omitempty"`
	// FileMode permission bits for the device.
	FileMode uint32 `protobuf:"varint,6,opt,name=file_mode,json=fileMode,proto3" json:"file_mode,omitempty"`
	// Uid of the device.
	Uid uint32 `protobuf:"varint,7,opt,name=uid,proto3" json:"uid,omitempty"`
	// Gid of the device.
	Gid uint32 `protobuf:"varint,8,opt,name=gid,proto3" json:"gid,omitempty"`
	// Write the file to the allowed list
	Allow                bool     `protobuf:"varint,9,opt,name=allow,proto3" json:"allow,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LibContainerDevice) Reset()         { *m = LibContainerDevice{} }
func (m *LibContainerDevice) String() string { return proto.CompactTextString(m) }
func (*LibContainerDevice) ProtoMessage()    {}
func (*LibContainerDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{23}
}

func (m *LibContainerDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LibContainerDevice.Unmarshal(m, b)
}
func (m *LibContainerDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LibContainerDevice.Marshal(b, m, deterministic)
}
func (m *LibContainerDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LibContainerDevice.Merge(m, src)
}
func (m *LibContainerDevice) XXX_Size() int {
	return xxx_messageInfo_LibContainerDevice.Size(m)
}
func (m *LibContainerDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_LibContainerDevice.DiscardUnknown(m)
}

var xxx_messageInfo_LibContainerDevice proto.InternalMessageInfo

func (m *LibContainerDevice) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *LibContainerDevice) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *LibContainerDevice) GetMajor() int64 {
	if m != nil {
		return m.Major
	}
	return 0
}

func (m *LibContainerDevice) GetMinor() int64 {
	if m != nil {
		return m.Minor
	}
	return 0
}

func (m *LibContainerDevice) GetPermissions() string {
	if m != nil {
		return m.Permissions
	}
	return ""
}

func (m *LibContainerDevice) GetFileMode() uint32 {
	if m != nil {
		return m.FileMode
	}
	return 0
}

func (m *LibContainerDevice) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *LibContainerDevice) GetGid() uint32 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *LibContainerDevice) GetAllow() bool {
	if m != nil {
		return m.Allow
	}
	return false
}

type ProcessType struct {
	Args                 []string                     `protobuf:"bytes,1,rep,name=args,proto3" json:"args,omitempty"`
	Env                  map[string]string            `protobuf:"bytes,2,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Ports                []*Port                      `protobuf:"bytes,3,rep,name=ports,proto3" json:"ports,omitempty"`
	Volumes              []*VolumeReq                 `protobuf:"bytes,4,rep,name=volumes,proto3" json:"volumes,omitempty"`
	Omni                 bool                         `protobuf:"varint,5,opt,name=omni,proto3" json:"omni,omitempty"`
	HostNetwork          bool                         `protobuf:"varint,6,opt,name=host_network,json=hostNetwork,proto3" json:"host_network,omitempty"`
	HostPidNamespace     bool                         `protobuf:"varint,7,opt,name=host_pid_namespace,json=hostPidNamespace,proto3" json:"host_pid_namespace,omitempty"`
	Service              string                       `protobuf:"bytes,8,opt,name=service,proto3" json:"service,omitempty"`
	Resurrect            bool                         `protobuf:"varint,9,opt,name=resurrect,proto3" json:"resurrect,omitempty"`
	Resources            map[string]*HostResourceSpec `protobuf:"bytes,10,rep,name=resources,proto3" json:"resources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Mounts               []*HostMount                 `protobuf:"bytes,11,rep,name=mounts,proto3" json:"mounts,omitempty"`
	LinuxCapabilities    []string                     `protobuf:"bytes,12,rep,name=linux_capabilities,json=linuxCapabilities,proto3" json:"linux_capabilities,omitempty"`
	AllowedDevices       []*LibContainerDevice        `protobuf:"bytes,13,rep,name=allowed_devices,json=allowedDevices,proto3" json:"allowed_devices,omitempty"`
	WriteableCgroups     bool                         `protobuf:"varint,14,opt,name=writeable_cgroups,json=writeableCgroups,proto3" json:"writeable_cgroups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ProcessType) Reset()         { *m = ProcessType{} }
func (m *ProcessType) String() string { return proto.CompactTextString(m) }
func (*ProcessType) ProtoMessage()    {}
func (*ProcessType) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{24}
}

func (m *ProcessType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessType.Unmarshal(m, b)
}
func (m *ProcessType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessType.Marshal(b, m, deterministic)
}
func (m *ProcessType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessType.Merge(m, src)
}
func (m *ProcessType) XXX_Size() int {
	return xxx_messageInfo_ProcessType.Size(m)
}
func (m *ProcessType) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessType.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessType proto.InternalMessageInfo

func (m *ProcessType) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *ProcessType) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *ProcessType) GetPorts() []*Port {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *ProcessType) GetVolumes() []*VolumeReq {
	if m != nil {
		return m.Volumes
	}
	return nil
}

func (m *ProcessType) GetOmni() bool {
	if m != nil {
		return m.Omni
	}
	return false
}

func (m *ProcessType) GetHostNetwork() bool {
	if m != nil {
		return m.HostNetwork
	}
	return false
}

func (m *ProcessType) GetHostPidNamespace() bool {
	if m != nil {
		return m.HostPidNamespace
	}
	return false
}

func (m *ProcessType) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *ProcessType) GetResurrect() bool {
	if m != nil {
		return m.Resurrect
	}
	return false
}

func (m *ProcessType) GetResources() map[string]*HostResourceSpec {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *ProcessType) GetMounts() []*HostMount {
	if m != nil {
		return m.Mounts
	}
	return nil
}

func (m *ProcessType) GetLinuxCapabilities() []string {
	if m != nil {
		return m.LinuxCapabilities
	}
	return nil
}

func (m *ProcessType) GetAllowedDevices() []*LibContainerDevice {
	if m != nil {
		return m.AllowedDevices
	}
	return nil
}

func (m *ProcessType) GetWriteableCgroups() bool {
	if m != nil {
		return m.WriteableCgroups
	}
	return false
}

type Release struct {
	// name = "apps/APP_ID/releases/RELEASE_ID"
	Name                 string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Artifacts            []string                `protobuf:"bytes,3,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	Env                  map[string]string       `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels               map[string]string       `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Processes            map[string]*ProcessType `protobuf:"bytes,6,rep,name=processes,proto3" json:"processes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Type                 ReleaseType             `protobuf:"varint,7,opt,name=type,proto3,enum=controller.ReleaseType" json:"type,omitempty"`
	CreateTime           *timestamp.Timestamp    `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Release) Reset()         { *m = Release{} }
func (m *Release) String() string { return proto.CompactTextString(m) }
func (*Release) ProtoMessage()    {}
func (*Release) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{25}
}

func (m *Release) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Release.Unmarshal(m, b)
}
func (m *Release) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Release.Marshal(b, m, deterministic)
}
func (m *Release) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Release.Merge(m, src)
}
func (m *Release) XXX_Size() int {
	return xxx_messageInfo_Release.Size(m)
}
func (m *Release) XXX_DiscardUnknown() {
	xxx_messageInfo_Release.DiscardUnknown(m)
}

var xxx_messageInfo_Release proto.InternalMessageInfo

func (m *Release) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Release) GetArtifacts() []string {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

func (m *Release) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *Release) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Release) GetProcesses() map[string]*ProcessType {
	if m != nil {
		return m.Processes
	}
	return nil
}

func (m *Release) GetType() ReleaseType {
	if m != nil {
		return m.Type
	}
	return ReleaseType_ANY
}

func (m *Release) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

type ScaleRequest struct {
	// parent = "apps/APP_ID/releases/RELEASE_ID"
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// name = "apps/APP_ID/releases/RELEASE_ID/scale/SCALE_REQUEST_ID"
	Name         string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	State        ScaleRequestState `protobuf:"varint,3,opt,name=state,proto3,enum=controller.ScaleRequestState" json:"state,omitempty"`
	OldProcesses map[string]int32  `protobuf:"bytes,4,rep,name=old_processes,json=oldProcesses,proto3" json:"old_processes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	NewProcesses map[string]int32  `protobuf:"bytes,5,rep,name=new_processes,json=newProcesses,proto3" json:"new_processes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// profobuf doesn't support maps within maps, so map[string]map[string]string
	// could not be reproduced
	OldTags              map[string]*DeploymentProcessTags `protobuf:"bytes,6,rep,name=old_tags,json=oldTags,proto3" json:"old_tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NewTags              map[string]*DeploymentProcessTags `protobuf:"bytes,7,rep,name=new_tags,json=newTags,proto3" json:"new_tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreateTime           *timestamp.Timestamp              `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           *timestamp.Timestamp              `protobuf:"bytes,9,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ScaleRequest) Reset()         { *m = ScaleRequest{} }
func (m *ScaleRequest) String() string { return proto.CompactTextString(m) }
func (*ScaleRequest) ProtoMessage()    {}
func (*ScaleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{26}
}

func (m *ScaleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScaleRequest.Unmarshal(m, b)
}
func (m *ScaleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScaleRequest.Marshal(b, m, deterministic)
}
func (m *ScaleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScaleRequest.Merge(m, src)
}
func (m *ScaleRequest) XXX_Size() int {
	return xxx_messageInfo_ScaleRequest.Size(m)
}
func (m *ScaleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScaleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScaleRequest proto.InternalMessageInfo

func (m *ScaleRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ScaleRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ScaleRequest) GetState() ScaleRequestState {
	if m != nil {
		return m.State
	}
	return ScaleRequestState_SCALE_PENDING
}

func (m *ScaleRequest) GetOldProcesses() map[string]int32 {
	if m != nil {
		return m.OldProcesses
	}
	return nil
}

func (m *ScaleRequest) GetNewProcesses() map[string]int32 {
	if m != nil {
		return m.NewProcesses
	}
	return nil
}

func (m *ScaleRequest) GetOldTags() map[string]*DeploymentProcessTags {
	if m != nil {
		return m.OldTags
	}
	return nil
}

func (m *ScaleRequest) GetNewTags() map[string]*DeploymentProcessTags {
	if m != nil {
		return m.NewTags
	}
	return nil
}

func (m *ScaleRequest) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *ScaleRequest) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type Formation struct {
	// parent = "apps/APP_ID/releases/RELEASE_ID"
	Parent    string            `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	State     ScaleRequestState `protobuf:"varint,2,opt,name=state,proto3,enum=controller.ScaleRequestState" json:"state,omitempty"`
	Processes map[string]int32  `protobuf:"bytes,3,rep,name=processes,proto3" json:"processes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// profobuf doesn't support maps within maps, so map[string]map[string]string
	// could not be reproduced
	Tags                 map[string]*DeploymentProcessTags `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreateTime           *timestamp.Timestamp              `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           *timestamp.Timestamp              `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *Formation) Reset()         { *m = Formation{} }
func (m *Formation) String() string { return proto.CompactTextString(m) }
func (*Formation) ProtoMessage()    {}
func (*Formation) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{27}
}

func (m *Formation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Formation.Unmarshal(m, b)
}
func (m *Formation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Formation.Marshal(b, m, deterministic)
}
func (m *Formation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Formation.Merge(m, src)
}
func (m *Formation) XXX_Size() int {
	return xxx_messageInfo_Formation.Size(m)
}
func (m *Formation) XXX_DiscardUnknown() {
	xxx_messageInfo_Formation.DiscardUnknown(m)
}

var xxx_messageInfo_Formation proto.InternalMessageInfo

func (m *Formation) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *Formation) GetState() ScaleRequestState {
	if m != nil {
		return m.State
	}
	return ScaleRequestState_SCALE_PENDING
}

func (m *Formation) GetProcesses() map[string]int32 {
	if m != nil {
		return m.Processes
	}
	return nil
}

func (m *Formation) GetTags() map[string]*DeploymentProcessTags {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Formation) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Formation) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

// See github.com/flynn/flynn/logaggregator/client Message
type LogChunk struct {
	// host = "hosts/HOST_ID"
	// host is the host that the job was running on when this log message was
	// emitted.
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// job_id = "apps/APP_ID/jobs/JOB_ID"
	Job string `protobuf:"bytes,2,opt,name=job,proto3" json:"job,omitempty"`
	// msg is the actual content of this log message.
	Msg string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	// process_type is the type of process that emitted this log message.
	ProcessType string `protobuf:"bytes,4,opt,name=process_type,json=processType,proto3" json:"process_type,omitempty"`
	// source is the source of this log message.
	Source LogAggregatorStreamSource `protobuf:"varint,5,opt,name=source,proto3,enum=controller.LogAggregatorStreamSource" json:"source,omitempty"`
	// stream is the I/O stream that emitted this message, such as "stdout" or
	// "stderr".
	Stream LogAggregatorStreamType `protobuf:"varint,6,opt,name=stream,proto3,enum=controller.LogAggregatorStreamType" json:"stream,omitempty"`
	// create_time is the time that this log line was emitted.
	CreateTime           *timestamp.Timestamp `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LogChunk) Reset()         { *m = LogChunk{} }
func (m *LogChunk) String() string { return proto.CompactTextString(m) }
func (*LogChunk) ProtoMessage()    {}
func (*LogChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{28}
}

func (m *LogChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogChunk.Unmarshal(m, b)
}
func (m *LogChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogChunk.Marshal(b, m, deterministic)
}
func (m *LogChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogChunk.Merge(m, src)
}
func (m *LogChunk) XXX_Size() int {
	return xxx_messageInfo_LogChunk.Size(m)
}
func (m *LogChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_LogChunk.DiscardUnknown(m)
}

var xxx_messageInfo_LogChunk proto.InternalMessageInfo

func (m *LogChunk) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *LogChunk) GetJob() string {
	if m != nil {
		return m.Job
	}
	return ""
}

func (m *LogChunk) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *LogChunk) GetProcessType() string {
	if m != nil {
		return m.ProcessType
	}
	return ""
}

func (m *LogChunk) GetSource() LogAggregatorStreamSource {
	if m != nil {
		return m.Source
	}
	return LogAggregatorStreamSource_APP
}

func (m *LogChunk) GetStream() LogAggregatorStreamType {
	if m != nil {
		return m.Stream
	}
	return LogAggregatorStreamType_STDOUT
}

func (m *LogChunk) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

type DeploymentProcessTags struct {
	Tags                 map[string]string `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DeploymentProcessTags) Reset()         { *m = DeploymentProcessTags{} }
func (m *DeploymentProcessTags) String() string { return proto.CompactTextString(m) }
func (*DeploymentProcessTags) ProtoMessage()    {}
func (*DeploymentProcessTags) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{29}
}

func (m *DeploymentProcessTags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeploymentProcessTags.Unmarshal(m, b)
}
func (m *DeploymentProcessTags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeploymentProcessTags.Marshal(b, m, deterministic)
}
func (m *DeploymentProcessTags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeploymentProcessTags.Merge(m, src)
}
func (m *DeploymentProcessTags) XXX_Size() int {
	return xxx_messageInfo_DeploymentProcessTags.Size(m)
}
func (m *DeploymentProcessTags) XXX_DiscardUnknown() {
	xxx_messageInfo_DeploymentProcessTags.DiscardUnknown(m)
}

var xxx_messageInfo_DeploymentProcessTags proto.InternalMessageInfo

func (m *DeploymentProcessTags) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Deployment struct {
	// name = "apps/APP_ID/deployments/DEPLOYMENT_ID"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// old_release = Release.name
	OldRelease string `protobuf:"bytes,3,opt,name=old_release,json=oldRelease,proto3" json:"old_release,omitempty"`
	// new_release = Release.name
	NewRelease string           `protobuf:"bytes,4,opt,name=new_release,json=newRelease,proto3" json:"new_release,omitempty"`
	Strategy   string           `protobuf:"bytes,5,opt,name=strategy,proto3" json:"strategy,omitempty"`
	Status     DeploymentStatus `protobuf:"varint,6,opt,name=status,proto3,enum=controller.DeploymentStatus" json:"status,omitempty"`
	Processes  map[string]int32 `protobuf:"bytes,7,rep,name=processes,proto3" json:"processes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// profobuf doesn't support maps within maps, so map[string]map[string]string
	// could not be reproduced
	Tags                 map[string]*DeploymentProcessTags `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DeployTimeout        int32                             `protobuf:"varint,9,opt,name=deploy_timeout,json=deployTimeout,proto3" json:"deploy_timeout,omitempty"`
	CreateTime           *timestamp.Timestamp              `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	ExpireTime           *timestamp.Timestamp              `protobuf:"bytes,11,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	EndTime              *timestamp.Timestamp              `protobuf:"bytes,12,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *Deployment) Reset()         { *m = Deployment{} }
func (m *Deployment) String() string { return proto.CompactTextString(m) }
func (*Deployment) ProtoMessage()    {}
func (*Deployment) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{30}
}

func (m *Deployment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deployment.Unmarshal(m, b)
}
func (m *Deployment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deployment.Marshal(b, m, deterministic)
}
func (m *Deployment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deployment.Merge(m, src)
}
func (m *Deployment) XXX_Size() int {
	return xxx_messageInfo_Deployment.Size(m)
}
func (m *Deployment) XXX_DiscardUnknown() {
	xxx_messageInfo_Deployment.DiscardUnknown(m)
}

var xxx_messageInfo_Deployment proto.InternalMessageInfo

func (m *Deployment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Deployment) GetOldRelease() string {
	if m != nil {
		return m.OldRelease
	}
	return ""
}

func (m *Deployment) GetNewRelease() string {
	if m != nil {
		return m.NewRelease
	}
	return ""
}

func (m *Deployment) GetStrategy() string {
	if m != nil {
		return m.Strategy
	}
	return ""
}

func (m *Deployment) GetStatus() DeploymentStatus {
	if m != nil {
		return m.Status
	}
	return DeploymentStatus_PENDING
}

func (m *Deployment) GetProcesses() map[string]int32 {
	if m != nil {
		return m.Processes
	}
	return nil
}

func (m *Deployment) GetTags() map[string]*DeploymentProcessTags {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Deployment) GetDeployTimeout() int32 {
	if m != nil {
		return m.DeployTimeout
	}
	return 0
}

func (m *Deployment) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Deployment) GetExpireTime() *timestamp.Timestamp {
	if m != nil {
		return m.ExpireTime
	}
	return nil
}

func (m *Deployment) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

type ExpandedDeployment struct {
	// name = "apps/APP_ID/deployments/DEPLOYMENT_ID"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// old_release = Release.name
	OldRelease *Release `protobuf:"bytes,3,opt,name=old_release,json=oldRelease,proto3" json:"old_release,omitempty"`
	// new_release = Release.name
	NewRelease *Release         `protobuf:"bytes,4,opt,name=new_release,json=newRelease,proto3" json:"new_release,omitempty"`
	Type       ReleaseType      `protobuf:"varint,5,opt,name=type,proto3,enum=controller.ReleaseType" json:"type,omitempty"`
	Strategy   string           `protobuf:"bytes,6,opt,name=strategy,proto3" json:"strategy,omitempty"`
	Status     DeploymentStatus `protobuf:"varint,7,opt,name=status,proto3,enum=controller.DeploymentStatus" json:"status,omitempty"`
	Processes  map[string]int32 `protobuf:"bytes,8,rep,name=processes,proto3" json:"processes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// profobuf doesn't support maps within maps, so map[string]map[string]string
	// could not be reproduced
	Tags                 map[string]*DeploymentProcessTags `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DeployTimeout        int32                             `protobuf:"varint,10,opt,name=deploy_timeout,json=deployTimeout,proto3" json:"deploy_timeout,omitempty"`
	CreateTime           *timestamp.Timestamp              `protobuf:"bytes,11,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	ExpireTime           *timestamp.Timestamp              `protobuf:"bytes,12,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	EndTime              *timestamp.Timestamp              `protobuf:"bytes,13,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ExpandedDeployment) Reset()         { *m = ExpandedDeployment{} }
func (m *ExpandedDeployment) String() string { return proto.CompactTextString(m) }
func (*ExpandedDeployment) ProtoMessage()    {}
func (*ExpandedDeployment) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{31}
}

func (m *ExpandedDeployment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpandedDeployment.Unmarshal(m, b)
}
func (m *ExpandedDeployment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpandedDeployment.Marshal(b, m, deterministic)
}
func (m *ExpandedDeployment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpandedDeployment.Merge(m, src)
}
func (m *ExpandedDeployment) XXX_Size() int {
	return xxx_messageInfo_ExpandedDeployment.Size(m)
}
func (m *ExpandedDeployment) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpandedDeployment.DiscardUnknown(m)
}

var xxx_messageInfo_ExpandedDeployment proto.InternalMessageInfo

func (m *ExpandedDeployment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ExpandedDeployment) GetOldRelease() *Release {
	if m != nil {
		return m.OldRelease
	}
	return nil
}

func (m *ExpandedDeployment) GetNewRelease() *Release {
	if m != nil {
		return m.NewRelease
	}
	return nil
}

func (m *ExpandedDeployment) GetType() ReleaseType {
	if m != nil {
		return m.Type
	}
	return ReleaseType_ANY
}

func (m *ExpandedDeployment) GetStrategy() string {
	if m != nil {
		return m.Strategy
	}
	return ""
}

func (m *ExpandedDeployment) GetStatus() DeploymentStatus {
	if m != nil {
		return m.Status
	}
	return DeploymentStatus_PENDING
}

func (m *ExpandedDeployment) GetProcesses() map[string]int32 {
	if m != nil {
		return m.Processes
	}
	return nil
}

func (m *ExpandedDeployment) GetTags() map[string]*DeploymentProcessTags {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *ExpandedDeployment) GetDeployTimeout() int32 {
	if m != nil {
		return m.DeployTimeout
	}
	return 0
}

func (m *ExpandedDeployment) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *ExpandedDeployment) GetExpireTime() *timestamp.Timestamp {
	if m != nil {
		return m.ExpireTime
	}
	return nil
}

func (m *ExpandedDeployment) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

type DeploymentEvent struct {
	Deployment           *Deployment              `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	JobType              string                   `protobuf:"bytes,2,opt,name=job_type,json=jobType,proto3" json:"job_type,omitempty"`
	JobState             DeploymentEvent_JobState `protobuf:"varint,3,opt,name=job_state,json=jobState,proto3,enum=controller.DeploymentEvent_JobState" json:"job_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *DeploymentEvent) Reset()         { *m = DeploymentEvent{} }
func (m *DeploymentEvent) String() string { return proto.CompactTextString(m) }
func (*DeploymentEvent) ProtoMessage()    {}
func (*DeploymentEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{32}
}

func (m *DeploymentEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeploymentEvent.Unmarshal(m, b)
}
func (m *DeploymentEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeploymentEvent.Marshal(b, m, deterministic)
}
func (m *DeploymentEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeploymentEvent.Merge(m, src)
}
func (m *DeploymentEvent) XXX_Size() int {
	return xxx_messageInfo_DeploymentEvent.Size(m)
}
func (m *DeploymentEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DeploymentEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DeploymentEvent proto.InternalMessageInfo

func (m *DeploymentEvent) GetDeployment() *Deployment {
	if m != nil {
		return m.Deployment
	}
	return nil
}

func (m *DeploymentEvent) GetJobType() string {
	if m != nil {
		return m.JobType
	}
	return ""
}

func (m *DeploymentEvent) GetJobState() DeploymentEvent_JobState {
	if m != nil {
		return m.JobState
	}
	return DeploymentEvent_PENDING
}

type Event struct {
	DeploymentEvent      *DeploymentEvent     `protobuf:"bytes,1,opt,name=deployment_event,json=deploymentEvent,proto3" json:"deployment_event,omitempty"`
	Error                string               `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
	CreateTime           *timestamp.Timestamp `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{33}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetDeploymentEvent() *DeploymentEvent {
	if m != nil {
		return m.DeploymentEvent
	}
	return nil
}

func (m *Event) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *Event) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func init() {
	proto.RegisterEnum("controller.ReleaseType", ReleaseType_name, ReleaseType_value)
	proto.RegisterEnum("controller.ScaleRequestState", ScaleRequestState_name, ScaleRequestState_value)
	proto.RegisterEnum("controller.LogAggregatorStreamSource", LogAggregatorStreamSource_name, LogAggregatorStreamSource_value)
	proto.RegisterEnum("controller.LogAggregatorStreamType", LogAggregatorStreamType_name, LogAggregatorStreamType_value)
	proto.RegisterEnum("controller.DeploymentStatus", DeploymentStatus_name, DeploymentStatus_value)
	proto.RegisterEnum("controller.DeploymentEvent_JobState", DeploymentEvent_JobState_name, DeploymentEvent_JobState_value)
	proto.RegisterType((*ListAppsRequest)(nil), "controller.ListAppsRequest")
	proto.RegisterType((*ListAppsResponse)(nil), "controller.ListAppsResponse")
	proto.RegisterType((*GetAppRequest)(nil), "controller.GetAppRequest")
	proto.RegisterType((*UpdateAppRequest)(nil), "controller.UpdateAppRequest")
	proto.RegisterType((*GetAppReleaseRequest)(nil), "controller.GetAppReleaseRequest")
	proto.RegisterType((*CreateScaleRequest)(nil), "controller.CreateScaleRequest")
	proto.RegisterMapType((map[string]int32)(nil), "controller.CreateScaleRequest.ProcessesEntry")
	proto.RegisterMapType((map[string]*DeploymentProcessTags)(nil), "controller.CreateScaleRequest.TagsEntry")
	proto.RegisterType((*ListScaleRequestsRequest)(nil), "controller.ListScaleRequestsRequest")
	proto.RegisterType((*ListScaleRequestsResponse)(nil), "controller.ListScaleRequestsResponse")
	proto.RegisterType((*GetAppFormationRequest)(nil), "controller.GetAppFormationRequest")
	proto.RegisterType((*GetReleaseRequest)(nil), "controller.GetReleaseRequest")
	proto.RegisterType((*LogAggregatorLogOpts)(nil), "controller.LogAggregatorLogOpts")
	proto.RegisterType((*StreamAppLogRequest)(nil), "controller.StreamAppLogRequest")
	proto.RegisterType((*CreateReleaseRequest)(nil), "controller.CreateReleaseRequest")
	proto.RegisterType((*ListDeploymentsRequest)(nil), "controller.ListDeploymentsRequest")
	proto.RegisterType((*ListDeploymentsResponse)(nil), "controller.ListDeploymentsResponse")
	proto.RegisterType((*CreateDeploymentRequest)(nil), "controller.CreateDeploymentRequest")
	proto.RegisterType((*App)(nil), "controller.App")
	proto.RegisterMapType((map[string]string)(nil), "controller.App.LabelsEntry")
	proto.RegisterType((*HostHealthCheck)(nil), "controller.HostHealthCheck")
	proto.RegisterType((*HostService)(nil), "controller.HostService")
	proto.RegisterType((*Port)(nil), "controller.Port")
	proto.RegisterType((*VolumeReq)(nil), "controller.VolumeReq")
	proto.RegisterType((*HostResourceSpec)(nil), "controller.HostResourceSpec")
	proto.RegisterType((*HostMount)(nil), "controller.HostMount")
	proto.RegisterType((*LibContainerDevice)(nil), "controller.LibContainerDevice")
	proto.RegisterType((*ProcessType)(nil), "controller.ProcessType")
	proto.RegisterMapType((map[string]string)(nil), "controller.ProcessType.EnvEntry")
	proto.RegisterMapType((map[string]*HostResourceSpec)(nil), "controller.ProcessType.ResourcesEntry")
	proto.RegisterType((*Release)(nil), "controller.Release")
	proto.RegisterMapType((map[string]string)(nil), "controller.Release.EnvEntry")
	proto.RegisterMapType((map[string]string)(nil), "controller.Release.LabelsEntry")
	proto.RegisterMapType((map[string]*ProcessType)(nil), "controller.Release.ProcessesEntry")
	proto.RegisterType((*ScaleRequest)(nil), "controller.ScaleRequest")
	proto.RegisterMapType((map[string]int32)(nil), "controller.ScaleRequest.NewProcessesEntry")
	proto.RegisterMapType((map[string]*DeploymentProcessTags)(nil), "controller.ScaleRequest.NewTagsEntry")
	proto.RegisterMapType((map[string]int32)(nil), "controller.ScaleRequest.OldProcessesEntry")
	proto.RegisterMapType((map[string]*DeploymentProcessTags)(nil), "controller.ScaleRequest.OldTagsEntry")
	proto.RegisterType((*Formation)(nil), "controller.Formation")
	proto.RegisterMapType((map[string]int32)(nil), "controller.Formation.ProcessesEntry")
	proto.RegisterMapType((map[string]*DeploymentProcessTags)(nil), "controller.Formation.TagsEntry")
	proto.RegisterType((*LogChunk)(nil), "controller.LogChunk")
	proto.RegisterType((*DeploymentProcessTags)(nil), "controller.DeploymentProcessTags")
	proto.RegisterMapType((map[string]string)(nil), "controller.DeploymentProcessTags.TagsEntry")
	proto.RegisterType((*Deployment)(nil), "controller.Deployment")
	proto.RegisterMapType((map[string]int32)(nil), "controller.Deployment.ProcessesEntry")
	proto.RegisterMapType((map[string]*DeploymentProcessTags)(nil), "controller.Deployment.TagsEntry")
	proto.RegisterType((*ExpandedDeployment)(nil), "controller.ExpandedDeployment")
	proto.RegisterMapType((map[string]int32)(nil), "controller.ExpandedDeployment.ProcessesEntry")
	proto.RegisterMapType((map[string]*DeploymentProcessTags)(nil), "controller.ExpandedDeployment.TagsEntry")
	proto.RegisterType((*DeploymentEvent)(nil), "controller.DeploymentEvent")
	proto.RegisterType((*Event)(nil), "controller.Event")
}

func init() { proto.RegisterFile("controller.proto", fileDescriptor_ed7f10298fa1d90f) }

var fileDescriptor_ed7f10298fa1d90f = []byte{
	// 2866 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x5a, 0xdd, 0x72, 0x1b, 0xc7,
	0xb1, 0x16, 0xfe, 0x81, 0x06, 0x40, 0x2e, 0xc7, 0xb2, 0x04, 0x41, 0xb4, 0x45, 0x41, 0xb2, 0x8f,
	0x4a, 0xb6, 0x28, 0x9b, 0x92, 0x7f, 0xce, 0xb1, 0xcf, 0x91, 0x28, 0x10, 0x94, 0x78, 0x0c, 0x02,
	0xac, 0x05, 0x95, 0x54, 0x5c, 0x95, 0x42, 0x96, 0xd8, 0x21, 0xb8, 0xe2, 0x62, 0x67, 0xb3, 0x3b,
	0x20, 0x45, 0x27, 0x77, 0xce, 0x03, 0x24, 0x55, 0xb9, 0x4a, 0x55, 0x52, 0x95, 0x5c, 0xe4, 0x2e,
	0x95, 0x67, 0x48, 0x5e, 0x20, 0x95, 0x47, 0xc8, 0x45, 0x1e, 0x22, 0x77, 0xa9, 0xf9, 0xd9, 0xc5,
	0xec, 0x0f, 0x08, 0xd2, 0xf6, 0x85, 0x2b, 0x77, 0x33, 0x3d, 0xdd, 0xbd, 0x3d, 0x5f, 0x77, 0xcf,
	0xf4, 0xcc, 0x2c, 0x68, 0x23, 0xe2, 0x50, 0x8f, 0xd8, 0x36, 0xf6, 0xd6, 0x5d, 0x8f, 0x50, 0x82,
	0x60, 0x46, 0x69, 0xae, 0x8e, 0x09, 0x19, 0xdb, 0xf8, 0xa1, 0xe1, 0x5a, 0x0f, 0x0d, 0xc7, 0x21,
	0xd4, 0xa0, 0x16, 0x71, 0x7c, 0xc1, 0xd9, 0xbc, 0x25, 0x47, 0x79, 0xef, 0x60, 0x7a, 0xf8, 0x90,
	0x5a, 0x13, 0xec, 0x53, 0x63, 0xe2, 0x4a, 0x86, 0xb7, 0xe3, 0x0c, 0xe6, 0xd4, 0xe3, 0x1a, 0xe4,
	0xf8, 0x5a, 0x7c, 0xfc, 0xd0, 0xc2, 0xb6, 0x39, 0x9c, 0x18, 0xfe, 0xb1, 0xe0, 0x68, 0xed, 0xc2,
	0x72, 0xd7, 0xf2, 0xe9, 0xa6, 0xeb, 0xfa, 0x3a, 0xfe, 0xe9, 0x14, 0xfb, 0x14, 0xdd, 0x84, 0x8a,
	0x6b, 0x8c, 0xf1, 0xd0, 0xb7, 0xbe, 0xc2, 0x8d, 0xcc, 0x5a, 0xe6, 0x5e, 0x41, 0x2f, 0x33, 0xc2,
	0xc0, 0xfa, 0x0a, 0xa3, 0xb7, 0x00, 0xf8, 0x20, 0x25, 0xc7, 0xd8, 0x69, 0x64, 0xd7, 0x32, 0xf7,
	0x2a, 0x3a, 0x67, 0xdf, 0x67, 0x84, 0xd6, 0x10, 0xb4, 0x99, 0x3a, 0xdf, 0x25, 0x8e, 0x8f, 0xd1,
	0x1d, 0xc8, 0x1b, 0xae, 0xeb, 0x37, 0x32, 0x6b, 0xb9, 0x7b, 0xd5, 0x8d, 0xe5, 0x75, 0x05, 0x90,
	0x4d, 0xd7, 0xd5, 0xf9, 0x20, 0x7a, 0x17, 0x96, 0x1d, 0xfc, 0x9a, 0x0e, 0x13, 0xca, 0xeb, 0x8c,
	0xbc, 0x17, 0x7e, 0xe0, 0x0e, 0xd4, 0x9f, 0x63, 0xa6, 0x3f, 0xb0, 0x16, 0x41, 0xde, 0x31, 0x26,
	0xc2, 0xd0, 0x8a, 0xce, 0xdb, 0x2d, 0x0f, 0xb4, 0x97, 0xae, 0x69, 0x50, 0xac, 0xf0, 0xdd, 0x86,
	0x9c, 0xe1, 0xba, 0x9c, 0x2d, 0xc5, 0x08, 0x36, 0x86, 0x3e, 0x83, 0xea, 0x94, 0x8b, 0x71, 0x80,
	0xf8, 0xf7, 0xab, 0x1b, 0xcd, 0x75, 0x81, 0xe1, 0x7a, 0x80, 0xe1, 0xfa, 0x36, 0xc3, 0x70, 0xd7,
	0xf0, 0x8f, 0x75, 0x10, 0xec, 0xac, 0xdd, 0x5a, 0x87, 0xab, 0x81, 0x61, 0x36, 0x36, 0x7c, 0x1c,
	0x7c, 0xf7, 0x1a, 0x14, 0x5d, 0xc3, 0xc3, 0x0e, 0x95, 0x16, 0xca, 0x5e, 0xeb, 0xef, 0x59, 0x40,
	0x6d, 0x0f, 0x1b, 0x14, 0x0f, 0x46, 0x86, 0xbd, 0x88, 0x1d, 0x7d, 0x01, 0x15, 0xd7, 0x23, 0x23,
	0xec, 0xfb, 0xd8, 0x6f, 0x64, 0x39, 0x92, 0x0f, 0xd4, 0x49, 0x24, 0x55, 0xad, 0xef, 0x05, 0xfc,
	0x1d, 0x87, 0x7a, 0x67, 0xfa, 0x4c, 0x1e, 0x7d, 0x0e, 0x79, 0x6a, 0x8c, 0xfd, 0x46, 0x8e, 0xeb,
	0xb9, 0xb7, 0x40, 0xcf, 0xbe, 0x31, 0x96, 0x2a, 0xb8, 0x54, 0xf3, 0x73, 0x58, 0x8a, 0xaa, 0x46,
	0x1a, 0xe4, 0x8e, 0xf1, 0x99, 0xb4, 0x98, 0x35, 0xd1, 0x55, 0x28, 0x9c, 0x18, 0xf6, 0x14, 0x73,
	0x10, 0x0b, 0xba, 0xe8, 0xfc, 0x4f, 0xf6, 0xd3, 0x4c, 0xf3, 0x4b, 0xa8, 0x84, 0x0a, 0x53, 0x04,
	0x3f, 0x51, 0x05, 0xab, 0x1b, 0xb7, 0x55, 0xdb, 0xb6, 0xb0, 0x6b, 0x93, 0xb3, 0x09, 0x76, 0xa8,
	0xfc, 0x3e, 0x53, 0xa4, 0xe8, 0x6e, 0x6d, 0x40, 0x83, 0x45, 0x9f, 0x6a, 0xbd, 0xbf, 0xc8, 0x0f,
	0xbf, 0xc8, 0xc0, 0x8d, 0x14, 0x21, 0x19, 0xbb, 0x4f, 0x60, 0xc9, 0x67, 0x03, 0x43, 0x4f, 0x8e,
	0xc8, 0x28, 0x6e, 0xa8, 0x76, 0xa9, 0xa2, 0x7a, 0xdd, 0x57, 0x15, 0x5d, 0x38, 0xae, 0x3f, 0x80,
	0x6b, 0x22, 0x7c, 0xb6, 0x89, 0x37, 0xe1, 0x29, 0xbc, 0xc8, 0xf0, 0xff, 0x82, 0x95, 0xe7, 0x98,
	0xc6, 0xa2, 0x2d, 0x2d, 0x1b, 0xfe, 0x92, 0x81, 0xab, 0x5d, 0x32, 0xde, 0x1c, 0x8f, 0x3d, 0x3c,
	0x36, 0x28, 0xf1, 0xba, 0x64, 0xdc, 0x77, 0xa9, 0xcf, 0x34, 0x1f, 0x12, 0xdb, 0x26, 0xa7, 0x9c,
	0xbd, 0xac, 0xcb, 0x1e, 0xf3, 0xca, 0x2b, 0x72, 0x20, 0xed, 0x64, 0x4d, 0xe6, 0x4e, 0xdb, 0x72,
	0x30, 0x8b, 0x18, 0xee, 0x4e, 0xde, 0x41, 0xb7, 0xa1, 0x26, 0x63, 0x6a, 0x48, 0xcf, 0x5c, 0xdc,
	0xc8, 0x73, 0x81, 0xaa, 0xa4, 0xed, 0x9f, 0xb9, 0x18, 0x6d, 0x43, 0xcd, 0xa7, 0x1e, 0x36, 0x26,
	0x9c, 0xc3, 0x6f, 0x14, 0xd6, 0x72, 0xf7, 0x96, 0x36, 0xee, 0xa8, 0xe8, 0x45, 0x4c, 0x1b, 0x70,
	0x66, 0x26, 0xaa, 0x57, 0xfd, 0xb0, 0xed, 0xb7, 0x86, 0xf0, 0x86, 0x18, 0xda, 0x74, 0xdd, 0x2e,
	0x19, 0x9f, 0x33, 0x5d, 0xf4, 0x18, 0xf2, 0xc4, 0xa5, 0xbe, 0x0c, 0xa0, 0xb5, 0xb9, 0x9f, 0x92,
	0x28, 0xe8, 0x9c, 0xbb, 0xf5, 0x73, 0xb8, 0x2a, 0x42, 0xff, 0x62, 0xe9, 0x8b, 0x1e, 0x40, 0xc9,
	0x13, 0x9c, 0xf2, 0x43, 0x6f, 0xa8, 0x1f, 0x0a, 0x94, 0x04, 0x3c, 0x6c, 0xd9, 0x94, 0x11, 0x34,
	0xb4, 0x4c, 0x8e, 0x62, 0x45, 0xaf, 0x48, 0xca, 0x8e, 0xd9, 0xfa, 0x63, 0x06, 0xae, 0xb1, 0x20,
	0x9c, 0x45, 0xf8, 0x77, 0xb1, 0x1a, 0x2b, 0xc6, 0xe7, 0x22, 0xc6, 0x7f, 0x0a, 0xd5, 0x43, 0xcb,
	0xa6, 0xd8, 0x9b, 0xf9, 0x6d, 0x69, 0xe3, 0x7a, 0xca, 0x04, 0xb8, 0x23, 0x40, 0xf0, 0xb2, 0x76,
	0xeb, 0xeb, 0x0c, 0x5c, 0x4f, 0x18, 0x2a, 0x73, 0xe5, 0x29, 0x54, 0xcd, 0x19, 0x59, 0x26, 0xca,
	0xdb, 0xaa, 0xd6, 0xce, 0x6b, 0xd7, 0x70, 0x4c, 0x6c, 0xce, 0xa4, 0x75, 0x55, 0xe4, 0xc2, 0xc9,
	0xf2, 0xe7, 0x0c, 0x5c, 0x17, 0xde, 0x52, 0x34, 0x2d, 0x70, 0x58, 0x23, 0xea, 0xb0, 0xca, 0x45,
	0x7d, 0x83, 0xda, 0x50, 0x8f, 0x2c, 0x01, 0x1c, 0xae, 0xd8, 0xc4, 0x92, 0xab, 0xa6, 0x5e, 0x53,
	0xd7, 0x81, 0xd6, 0xd7, 0x39, 0xc8, 0x6d, 0xba, 0x6e, 0x6a, 0xc0, 0xde, 0x86, 0x9a, 0x69, 0xf9,
	0xae, 0x6d, 0x9c, 0x0d, 0xf9, 0x98, 0x30, 0xaf, 0x2a, 0x69, 0x3d, 0xc6, 0xf2, 0x08, 0x8a, 0xb6,
	0x71, 0x80, 0xed, 0x60, 0xc9, 0xbe, 0x19, 0xdb, 0xbf, 0xd6, 0xbb, 0x7c, 0x54, 0xac, 0xd2, 0x92,
	0x95, 0x6d, 0x67, 0x23, 0x6e, 0xd7, 0x90, 0x95, 0x0d, 0xd2, 0xec, 0xe4, 0x76, 0xb6, 0x1f, 0xd4,
	0x14, 0x3a, 0x08, 0x76, 0x46, 0x50, 0xf6, 0x42, 0x2e, 0x5c, 0x58, 0x2c, 0x2c, 0xd8, 0xb9, 0xf0,
	0x3b, 0xb0, 0x24, 0xdc, 0xca, 0x85, 0xc9, 0x94, 0x36, 0x8a, 0x3c, 0x70, 0xeb, 0x82, 0xba, 0x2f,
	0x88, 0xa8, 0x09, 0x65, 0x9f, 0x7a, 0x06, 0xc5, 0xe3, 0xb3, 0x46, 0x89, 0x4f, 0x3a, 0xec, 0xab,
	0xee, 0x2a, 0x47, 0xdc, 0xd5, 0xfc, 0x6f, 0xa8, 0x2a, 0xb3, 0x5d, 0xb4, 0xf7, 0x54, 0xd4, 0xfd,
	0xe1, 0x4f, 0x59, 0x58, 0x7e, 0x41, 0x7c, 0xfa, 0x02, 0x1b, 0x36, 0x3d, 0x6a, 0x1f, 0xe1, 0xd1,
	0x31, 0xf3, 0x08, 0x4f, 0x02, 0xe9, 0x11, 0xd6, 0x46, 0x1f, 0x41, 0xd9, 0x72, 0x28, 0xf6, 0x4e,
	0x0c, 0x9b, 0xc7, 0x43, 0x75, 0xe3, 0x46, 0x62, 0xe6, 0x5b, 0xb2, 0xd2, 0xd2, 0x43, 0x56, 0xb4,
	0x0a, 0x15, 0x7a, 0xe4, 0x61, 0xff, 0x88, 0xd8, 0x26, 0x87, 0xbb, 0xa0, 0xcf, 0x08, 0x2c, 0x91,
	0x8f, 0x2d, 0xdb, 0x1e, 0x9a, 0xe4, 0xd4, 0xe1, 0x78, 0x96, 0xf5, 0x32, 0x23, 0x6c, 0x91, 0x53,
	0x07, 0xfd, 0x1f, 0xd4, 0x7d, 0x6a, 0x78, 0x34, 0x02, 0xd8, 0xb9, 0x9f, 0xad, 0x71, 0xfe, 0x00,
	0x4a, 0x04, 0x79, 0xd7, 0xa0, 0x47, 0x12, 0x46, 0xde, 0x66, 0xb4, 0x23, 0xe2, 0x53, 0x89, 0x1f,
	0x6f, 0x33, 0x6c, 0x26, 0x06, 0x1d, 0x1d, 0x35, 0x2a, 0x02, 0x1b, 0xde, 0x61, 0x39, 0xe3, 0x53,
	0x83, 0x4e, 0xfd, 0x06, 0x70, 0xab, 0x65, 0xaf, 0xf5, 0x33, 0xa8, 0x32, 0xb8, 0x06, 0xd8, 0x3b,
	0xb1, 0x46, 0xc9, 0x40, 0xcd, 0x24, 0x03, 0xf5, 0x1a, 0x14, 0x45, 0x10, 0x71, 0xf0, 0xcb, 0xba,
	0xec, 0xa1, 0x0f, 0xa1, 0x30, 0x62, 0x70, 0x4b, 0x38, 0x23, 0xf1, 0x1b, 0xf3, 0x88, 0x2e, 0x38,
	0x5b, 0x23, 0xc8, 0xef, 0x11, 0x4f, 0x4c, 0x8d, 0x78, 0x54, 0xae, 0x7d, 0xbc, 0xcd, 0xa6, 0xc1,
	0x11, 0x09, 0x5c, 0x2c, 0x0a, 0xeb, 0x0f, 0xa1, 0xe4, 0x0b, 0x53, 0xe5, 0x67, 0xae, 0xc7, 0x3f,
	0x23, 0x67, 0xa2, 0x07, 0x7c, 0xad, 0x0e, 0x54, 0x7e, 0x40, 0xec, 0xe9, 0x84, 0x25, 0x6a, 0x08,
	0x62, 0x46, 0x01, 0xf1, 0x2e, 0x0b, 0x65, 0x1b, 0x53, 0x3c, 0x24, 0xce, 0xd0, 0xa7, 0xc4, 0x95,
	0x13, 0xab, 0x09, 0x6a, 0xdf, 0x19, 0x50, 0xe2, 0xb6, 0x9e, 0x81, 0xc6, 0xd4, 0xeb, 0xd8, 0x27,
	0x53, 0x6f, 0x84, 0x07, 0x2e, 0x1e, 0x89, 0x08, 0x16, 0x2b, 0x06, 0x53, 0x98, 0xd3, 0x83, 0xae,
	0xd8, 0x4d, 0x27, 0x16, 0xe5, 0xaa, 0x72, 0xba, 0xe8, 0xb4, 0x7e, 0x9b, 0x81, 0x0a, 0x53, 0xb2,
	0x4b, 0xa6, 0x0e, 0xcf, 0x0d, 0x9b, 0x8c, 0xb8, 0xab, 0xa5, 0x3d, 0x61, 0x9f, 0x81, 0x4c, 0x0d,
	0x6f, 0x8c, 0xa9, 0x9c, 0xbe, 0xec, 0x31, 0x99, 0x53, 0xcf, 0xa2, 0xc6, 0x81, 0x2d, 0x00, 0x28,
	0xeb, 0x61, 0x9f, 0xc9, 0x98, 0x98, 0x43, 0x23, 0x76, 0x69, 0xd9, 0x63, 0x73, 0x36, 0x0d, 0x6a,
	0xf0, 0x80, 0xac, 0xe8, 0xbc, 0xcd, 0xec, 0x3b, 0xb4, 0x59, 0x7d, 0x28, 0xb2, 0x56, 0x74, 0x5a,
	0xff, 0xc8, 0x00, 0xea, 0x5a, 0x07, 0x6d, 0xe2, 0x50, 0xc3, 0x72, 0xb0, 0xb7, 0x15, 0x2a, 0x08,
	0xf3, 0xa7, 0x20, 0xf3, 0x27, 0x00, 0x32, 0xab, 0x00, 0xc9, 0x23, 0xef, 0x15, 0xf1, 0xb8, 0x65,
	0x39, 0x5d, 0x74, 0x38, 0xd5, 0x72, 0x88, 0xc7, 0xad, 0x62, 0x54, 0xd6, 0x41, 0x6b, 0x50, 0x75,
	0xb1, 0x37, 0xb1, 0x7c, 0x9f, 0x1d, 0x86, 0xa4, 0x6d, 0x2a, 0x89, 0x25, 0xd3, 0xa1, 0x65, 0xe3,
	0xe1, 0x84, 0x98, 0x98, 0x9b, 0x59, 0xd7, 0xcb, 0x8c, 0xb0, 0x4b, 0x4c, 0xcc, 0x96, 0x84, 0xa9,
	0x65, 0xf2, 0x5c, 0xa8, 0xeb, 0xac, 0xc9, 0x28, 0x63, 0xcb, 0xe4, 0x99, 0x50, 0xd7, 0x59, 0x93,
	0x7d, 0xd8, 0xe0, 0xa5, 0x4f, 0x85, 0x03, 0x25, 0x3a, 0xad, 0x7f, 0x15, 0xa0, 0xba, 0xa7, 0x94,
	0x2f, 0x08, 0xf2, 0x86, 0x37, 0x16, 0x7b, 0x59, 0x45, 0xe7, 0x6d, 0xb4, 0x01, 0x39, 0xec, 0x9c,
	0xc8, 0x1a, 0x3c, 0x52, 0x5e, 0x28, 0x92, 0xeb, 0x1d, 0xe7, 0x44, 0xac, 0xc6, 0x8c, 0x19, 0xbd,
	0x0b, 0x05, 0x16, 0xb7, 0xc1, 0xf2, 0xad, 0x45, 0xa4, 0x88, 0x47, 0x75, 0x31, 0x8c, 0x1e, 0x42,
	0xe9, 0x84, 0x87, 0xa3, 0xdf, 0xc8, 0x73, 0xce, 0x37, 0x55, 0xce, 0x30, 0x52, 0xf5, 0x80, 0x8b,
	0x19, 0x48, 0x26, 0x8e, 0x25, 0xd7, 0x13, 0xde, 0x66, 0x69, 0xca, 0x72, 0x7d, 0xe8, 0x60, 0x7a,
	0x4a, 0xbc, 0x63, 0x0e, 0x4f, 0x59, 0xaf, 0x32, 0x5a, 0x4f, 0x90, 0xd0, 0xfb, 0x80, 0x38, 0x8b,
	0x6b, 0x99, 0x3c, 0x95, 0x7d, 0xd7, 0x18, 0x61, 0x0e, 0x58, 0x59, 0xd7, 0xd8, 0xc8, 0x9e, 0x65,
	0xf6, 0x02, 0x3a, 0x8b, 0xe4, 0x20, 0xaf, 0xe4, 0x5a, 0x2c, 0xbb, 0x6c, 0xc5, 0xf3, 0xb0, 0x3f,
	0xf5, 0x3c, 0x3c, 0xa2, 0x12, 0xc9, 0x19, 0x01, 0x6d, 0xf1, 0x51, 0x9e, 0x11, 0x6c, 0x65, 0x61,
	0xf3, 0x79, 0x77, 0x1e, 0x5e, 0x41, 0xea, 0x04, 0x87, 0x95, 0x50, 0x10, 0x3d, 0x80, 0xe2, 0x84,
	0xa5, 0x84, 0xdf, 0xa8, 0x26, 0x21, 0x09, 0x13, 0x46, 0x97, 0x4c, 0xe8, 0x01, 0x20, 0xdb, 0x72,
	0xa6, 0xaf, 0x87, 0x23, 0xc3, 0x35, 0x0e, 0x2c, 0xdb, 0xa2, 0x16, 0xf6, 0x1b, 0x35, 0xee, 0xc0,
	0x15, 0x3e, 0xd2, 0x56, 0x06, 0xd0, 0x73, 0x58, 0xe6, 0xae, 0xc7, 0xe6, 0x50, 0x64, 0x84, 0xdf,
	0xa8, 0x27, 0x0b, 0x97, 0x64, 0xdc, 0xeb, 0x4b, 0x52, 0x4c, 0x74, 0x7d, 0xf4, 0x1e, 0xac, 0xb0,
	0x64, 0xc3, 0x2c, 0xdb, 0x86, 0xa3, 0xb1, 0x47, 0xa6, 0xae, 0xdf, 0x58, 0x12, 0x88, 0x86, 0x03,
	0x6d, 0x41, 0x6f, 0x7e, 0x0c, 0xe5, 0x20, 0x40, 0x2e, 0xb3, 0x81, 0x35, 0xbf, 0x84, 0xa5, 0x28,
	0x50, 0x29, 0xd2, 0x1b, 0xd1, 0x13, 0xd4, 0x6a, 0x1c, 0x2e, 0x75, 0x91, 0x52, 0x37, 0xc7, 0xdf,
	0xe4, 0xa1, 0x24, 0xcb, 0xbe, 0xd4, 0x32, 0x65, 0x15, 0x2a, 0x86, 0x47, 0xad, 0x43, 0x63, 0x24,
	0xe3, 0xb8, 0xa2, 0xcf, 0x08, 0x68, 0x5d, 0x64, 0x85, 0x88, 0xda, 0xd5, 0x94, 0x52, 0x32, 0x96,
	0x11, 0x9f, 0x84, 0x15, 0x4d, 0x81, 0x8b, 0xdc, 0x4a, 0x13, 0x49, 0xab, 0x6a, 0x9e, 0xaa, 0x07,
	0xe1, 0x22, 0x97, 0x6d, 0xa5, 0xc9, 0xce, 0x3f, 0xfd, 0xbe, 0x27, 0x57, 0xac, 0xd2, 0xf9, 0x65,
	0xaf, 0x58, 0xca, 0x62, 0x45, 0x54, 0xf9, 0x32, 0x45, 0xd4, 0x37, 0x76, 0xf3, 0x37, 0x2f, 0x71,
	0x9a, 0x2f, 0x2f, 0x70, 0x38, 0x7f, 0x10, 0x8d, 0x90, 0xeb, 0x73, 0x72, 0x52, 0x0d, 0x8e, 0xbf,
	0x15, 0xa1, 0x76, 0xa1, 0x7b, 0x8a, 0x20, 0x72, 0xb2, 0x4a, 0xe4, 0x3c, 0x82, 0x02, 0x2b, 0x28,
	0xc4, 0xa6, 0xb4, 0xb4, 0xf1, 0xd6, 0xbc, 0xb3, 0xf3, 0x80, 0x31, 0xe9, 0x82, 0x17, 0xf5, 0xa1,
	0x4e, 0x6c, 0x73, 0x38, 0xf3, 0xb5, 0x08, 0xad, 0xfb, 0xf3, 0x84, 0xd7, 0xfb, 0xb6, 0x19, 0xf3,
	0x79, 0x8d, 0x28, 0x24, 0xa6, 0xd0, 0xc1, 0xa7, 0x8a, 0xc2, 0xc2, 0x02, 0x85, 0x3d, 0x7c, 0x1a,
	0x57, 0xe8, 0x28, 0x24, 0xf4, 0x14, 0xca, 0xcc, 0x42, 0x2a, 0x76, 0x4a, 0xa6, 0xeb, 0x9d, 0xf3,
	0x8c, 0x9b, 0x5d, 0xa3, 0x94, 0x88, 0xe8, 0x31, 0x0d, 0xcc, 0x24, 0xae, 0xa1, 0xb4, 0x40, 0x43,
	0x0f, 0x9f, 0x2a, 0x1a, 0x1c, 0xd1, 0xfb, 0x56, 0xe1, 0x19, 0xaf, 0xf1, 0x2b, 0x97, 0xa9, 0xf1,
	0x9b, 0x4f, 0x60, 0x25, 0x81, 0xf8, 0xa5, 0x2e, 0x82, 0x9e, 0xc0, 0x4a, 0x02, 0xe1, 0x4b, 0x29,
	0xf8, 0x31, 0xd4, 0x54, 0x58, 0xbf, 0xe3, 0xcb, 0x24, 0xa6, 0x5e, 0xc5, 0xfc, 0xbb, 0xbe, 0xab,
	0xfa, 0x67, 0x0e, 0x2a, 0xe1, 0x5d, 0xcf, 0xdc, 0x74, 0x0a, 0x53, 0x27, 0x7b, 0x89, 0xd4, 0x79,
	0xa6, 0x2e, 0x91, 0xa2, 0xe2, 0xb8, 0xab, 0x0a, 0x86, 0x9f, 0x3d, 0x67, 0x91, 0x7c, 0x24, 0xaf,
	0x08, 0xf3, 0xc9, 0xd5, 0x79, 0x26, 0x1e, 0xbb, 0x19, 0x8c, 0x47, 0x63, 0xe1, 0xdb, 0x44, 0x63,
	0xf1, 0x52, 0xd1, 0xf8, 0xfd, 0xbd, 0x93, 0xfc, 0x5d, 0x16, 0xca, 0x5d, 0x32, 0x6e, 0x1f, 0x4d,
	0x9d, 0xe3, 0xf0, 0x48, 0x96, 0x51, 0x8e, 0x64, 0xc9, 0xdb, 0x36, 0x0d, 0x72, 0x13, 0x7f, 0x2c,
	0x6f, 0x22, 0x58, 0xf3, 0x22, 0x37, 0x6d, 0xff, 0x0b, 0x45, 0xb1, 0xaf, 0x73, 0xd8, 0x97, 0xa2,
	0x2b, 0x49, 0xca, 0x1d, 0xdb, 0x80, 0x33, 0xeb, 0x52, 0x08, 0x7d, 0xc6, 0x8e, 0x80, 0x8c, 0xce,
	0x81, 0xbf, 0xe0, 0x15, 0x9d, 0x14, 0x89, 0xfb, 0xbd, 0x74, 0x19, 0xbf, 0xb7, 0x7e, 0x95, 0x81,
	0x37, 0x53, 0x51, 0x44, 0x4f, 0x64, 0x0c, 0x8a, 0x9b, 0xa4, 0xf7, 0x16, 0xc2, 0x9e, 0xb8, 0xa9,
	0xfe, 0xe4, 0x7c, 0xbf, 0xce, 0xbf, 0x28, 0xf8, 0x7d, 0x01, 0x60, 0xf6, 0x89, 0xd4, 0x72, 0xe8,
	0x16, 0x54, 0xd9, 0xea, 0x1f, 0x5c, 0x52, 0x08, 0x67, 0x01, 0xb1, 0xcd, 0xa0, 0x86, 0xba, 0x05,
	0x55, 0xb6, 0xb8, 0x07, 0x0c, 0xc2, 0x65, 0xe0, 0xe0, 0xd3, 0x80, 0x41, 0xbd, 0xfe, 0x28, 0xc4,
	0xae, 0x3f, 0x1e, 0x87, 0x27, 0x72, 0xe1, 0x8e, 0xd5, 0xf4, 0xc9, 0x0f, 0x38, 0x4f, 0x70, 0x5e,
	0x47, 0x6d, 0x35, 0xf1, 0x53, 0x36, 0x94, 0x99, 0xe0, 0x39, 0x99, 0xff, 0x58, 0xa2, 0x5e, 0x4e,
	0x1e, 0x70, 0x14, 0xf9, 0x78, 0xea, 0x27, 0xaf, 0x7c, 0x2a, 0x69, 0x57, 0x3e, 0xb1, 0x48, 0x81,
	0xcb, 0xae, 0x10, 0xf8, 0xb5, 0x6b, 0x79, 0x52, 0xb8, 0xba, 0x58, 0x58, 0xb0, 0x73, 0xe1, 0x8f,
	0xa0, 0x8c, 0x1d, 0x53, 0x48, 0xd6, 0x16, 0x4a, 0x96, 0xb0, 0x63, 0x7e, 0xcf, 0x17, 0x96, 0x5f,
	0x16, 0x01, 0x25, 0x2f, 0x54, 0xe7, 0x5c, 0x89, 0x27, 0x62, 0x75, 0xce, 0x85, 0xb5, 0x1a, 0xc0,
	0x8f, 0x93, 0x01, 0x3c, 0x4f, 0x4a, 0x89, 0xea, 0xa0, 0xba, 0x2e, 0x5c, 0xa4, 0xba, 0x56, 0x53,
	0xa0, 0x38, 0x37, 0x05, 0x4a, 0x97, 0x48, 0x81, 0xc8, 0x3b, 0x59, 0x39, 0xf9, 0x4e, 0x96, 0x44,
	0xec, 0x02, 0xef, 0x64, 0x95, 0xe4, 0x3b, 0x59, 0x8a, 0x9e, 0xc5, 0x29, 0x01, 0x17, 0x48, 0x89,
	0xea, 0xb7, 0x49, 0x89, 0xda, 0x37, 0x4e, 0x89, 0xfa, 0x7f, 0x42, 0x4a, 0xfc, 0x3a, 0x0b, 0xcb,
	0x33, 0xa6, 0xce, 0x09, 0xcb, 0x87, 0x8f, 0x01, 0x66, 0x4f, 0x0c, 0xf2, 0xf9, 0xf7, 0x5a, 0xba,
	0x56, 0x5d, 0xe1, 0x44, 0x37, 0xa0, 0xfc, 0x8a, 0x1c, 0x88, 0xed, 0x56, 0x3e, 0x18, 0xbc, 0x22,
	0x07, 0x7c, 0xab, 0xdd, 0x84, 0x0a, 0x1b, 0x52, 0xcf, 0x34, 0x77, 0xd3, 0x35, 0x72, 0x13, 0xd6,
	0xff, 0x9f, 0x1c, 0x88, 0xfa, 0x8c, 0x69, 0xe4, 0xad, 0xd6, 0x31, 0x94, 0x03, 0x2a, 0xaa, 0x42,
	0x69, 0xaf, 0xd3, 0xdb, 0xda, 0xe9, 0x3d, 0xd7, 0xae, 0xb0, 0xce, 0xb3, 0x6e, 0xbf, 0xfd, 0x45,
	0x67, 0x4b, 0xcb, 0xa0, 0x1a, 0x94, 0x07, 0xfb, 0x9b, 0xfa, 0x3e, 0x1b, 0xca, 0xa2, 0x22, 0x64,
	0x5f, 0xee, 0x69, 0x39, 0x41, 0xed, 0xef, 0xed, 0x31, 0x6a, 0x01, 0x95, 0x21, 0xbf, 0xd5, 0xff,
	0x61, 0x4f, 0x2b, 0x32, 0xd1, 0xb6, 0xbe, 0x39, 0x78, 0xd1, 0xd9, 0xd2, 0x4a, 0x08, 0xa0, 0xb8,
	0xbd, 0xb9, 0xd3, 0xed, 0x6c, 0x69, 0xe5, 0xd6, 0x1f, 0x32, 0x50, 0x10, 0x60, 0x6c, 0x83, 0x36,
	0x9b, 0xe2, 0x10, 0x9f, 0xcc, 0x20, 0xb9, 0x79, 0xce, 0x04, 0xf4, 0x65, 0x33, 0x06, 0xea, 0x55,
	0x28, 0x74, 0x3c, 0x8f, 0x78, 0xc1, 0xce, 0xc9, 0x3b, 0xf1, 0x48, 0xce, 0x5d, 0x26, 0x92, 0xef,
	0xbf, 0x0f, 0x55, 0x65, 0x7d, 0x40, 0x25, 0xc8, 0x6d, 0xf6, 0x7e, 0xa4, 0x5d, 0x61, 0xf3, 0x6b,
	0xf7, 0xb7, 0x3a, 0x5a, 0x86, 0x4d, 0xa9, 0xdd, 0xef, 0x6d, 0xef, 0x3c, 0xd7, 0xb2, 0xf7, 0xfb,
	0xb0, 0x92, 0x28, 0x7f, 0xd1, 0x0a, 0xd4, 0x07, 0xed, 0xcd, 0x6e, 0x67, 0x38, 0x83, 0xf3, 0x0d,
	0x58, 0x16, 0xa4, 0xf6, 0x66, 0xaf, 0xdd, 0xe9, 0x76, 0x39, 0xac, 0x08, 0x96, 0x24, 0xb1, 0xbf,
	0xbb, 0xd7, 0xed, 0xec, 0x77, 0xb4, 0xec, 0xfd, 0xbb, 0x70, 0x63, 0x6e, 0x91, 0xc4, 0x8d, 0xd9,
	0xdb, 0xd3, 0xae, 0xdc, 0x7f, 0x01, 0xd7, 0xe7, 0xd4, 0x42, 0xcc, 0xba, 0xc1, 0xfe, 0x56, 0xff,
	0xe5, 0xbe, 0x76, 0x45, 0xb6, 0x3b, 0xba, 0xae, 0x65, 0x98, 0xfd, 0x3b, 0xbd, 0x9d, 0x7d, 0x2d,
	0xcb, 0xfc, 0xf3, 0xb2, 0xf7, 0x45, 0x8f, 0x39, 0x2b, 0x77, 0x7f, 0x1b, 0xb4, 0xf8, 0x1a, 0x16,
	0x0d, 0x84, 0x99, 0x03, 0x33, 0x6c, 0x40, 0x7f, 0xd9, 0xeb, 0x89, 0x30, 0xa8, 0x41, 0x39, 0xb4,
	0x3b, 0xb7, 0xf1, 0xd7, 0x12, 0x40, 0x3b, 0xf4, 0x1c, 0xea, 0xc3, 0x52, 0xf0, 0xff, 0x85, 0xb0,
	0x0d, 0xdd, 0x8c, 0xde, 0x63, 0x45, 0x7e, 0xf5, 0x68, 0xae, 0xa6, 0x0f, 0x8a, 0x07, 0xbd, 0xd6,
	0x95, 0x0f, 0x32, 0xe8, 0x33, 0xa8, 0x84, 0x0f, 0xaf, 0xe8, 0x86, 0xca, 0x1e, 0xf9, 0x0d, 0xa3,
	0x19, 0xff, 0xa3, 0x82, 0x0b, 0x3f, 0x85, 0x7a, 0xf8, 0x1f, 0xc6, 0x2e, 0xa6, 0x06, 0x8a, 0x7c,
	0x2f, 0xfe, 0x8b, 0x46, 0x8a, 0x0e, 0xb4, 0x0b, 0x5a, 0xf8, 0xf9, 0x60, 0x87, 0x59, 0x4b, 0xb3,
	0x42, 0x7d, 0xb4, 0x6d, 0xa6, 0x6d, 0x52, 0xdc, 0xa0, 0x1d, 0xa8, 0x2a, 0x4f, 0x75, 0x68, 0xc1,
	0x1b, 0x5e, 0x73, 0xee, 0x2b, 0x7f, 0xeb, 0x0a, 0x7a, 0x25, 0x1e, 0x42, 0x23, 0xbf, 0x0d, 0x48,
	0xc8, 0xef, 0xc6, 0x51, 0x4d, 0xfb, 0x21, 0xa1, 0xf9, 0xce, 0x02, 0x2e, 0xc5, 0x09, 0x03, 0x40,
	0x21, 0x0a, 0xb3, 0x33, 0x63, 0x2b, 0x89, 0x43, 0xfc, 0xe7, 0x81, 0xe6, 0x9b, 0xa9, 0x07, 0x37,
	0xae, 0xf4, 0x19, 0xc0, 0xec, 0xff, 0x01, 0xf4, 0x56, 0x4c, 0xd9, 0x85, 0x10, 0x45, 0x3b, 0x50,
	0x53, 0x9f, 0xe5, 0x51, 0xe4, 0x9c, 0x98, 0xf2, 0x60, 0xdf, 0xbc, 0x1a, 0x3b, 0x56, 0xf0, 0x63,
	0x11, 0x37, 0xe7, 0x05, 0xd4, 0x23, 0x0f, 0xf0, 0x51, 0x37, 0xa7, 0xbd, 0xcd, 0xcf, 0x33, 0xea,
	0x27, 0xb0, 0x22, 0x3e, 0xad, 0x3c, 0x52, 0x47, 0xc1, 0x4a, 0x7f, 0x6a, 0x6f, 0xde, 0x39, 0x97,
	0x47, 0xf1, 0x47, 0x0f, 0xb4, 0xf8, 0xf3, 0x33, 0xba, 0x93, 0x34, 0x37, 0xf1, 0x38, 0xdd, 0x5c,
	0x89, 0x94, 0x10, 0x6c, 0x29, 0x65, 0xfa, 0x9e, 0x15, 0xbf, 0xcc, 0x4f, 0x0c, 0xcb, 0x39, 0x28,
	0xf2, 0x35, 0xf2, 0xd1, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x30, 0x1e, 0xe4, 0xd6, 0x34, 0x26,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ControllerClient is the client API for Controller service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ControllerClient interface {
	// TODO(jvatic): Rename to StreamApps
	ListAppsStream(ctx context.Context, in *ListAppsRequest, opts ...grpc.CallOption) (Controller_ListAppsStreamClient, error)
	StreamApp(ctx context.Context, in *GetAppRequest, opts ...grpc.CallOption) (Controller_StreamAppClient, error)
	UpdateAppMeta(ctx context.Context, in *UpdateAppRequest, opts ...grpc.CallOption) (*App, error)
	StreamAppRelease(ctx context.Context, in *GetAppReleaseRequest, opts ...grpc.CallOption) (Controller_StreamAppReleaseClient, error)
	CreateScale(ctx context.Context, in *CreateScaleRequest, opts ...grpc.CallOption) (*ScaleRequest, error)
	// TODO(jvatic): Rename to StreamScaleRequests
	ListScaleRequestsStream(ctx context.Context, in *ListScaleRequestsRequest, opts ...grpc.CallOption) (Controller_ListScaleRequestsStreamClient, error)
	StreamAppFormation(ctx context.Context, in *GetAppFormationRequest, opts ...grpc.CallOption) (Controller_StreamAppFormationClient, error)
	GetRelease(ctx context.Context, in *GetReleaseRequest, opts ...grpc.CallOption) (*Release, error)
	StreamAppLog(ctx context.Context, in *StreamAppLogRequest, opts ...grpc.CallOption) (Controller_StreamAppLogClient, error)
	CreateRelease(ctx context.Context, in *CreateReleaseRequest, opts ...grpc.CallOption) (*Release, error)
	StreamDeployments(ctx context.Context, in *ListDeploymentsRequest, opts ...grpc.CallOption) (Controller_StreamDeploymentsClient, error)
	// TODO(jvatic): Use DeploymentEvent instead of Event
	CreateDeployment(ctx context.Context, in *CreateDeploymentRequest, opts ...grpc.CallOption) (Controller_CreateDeploymentClient, error)
}

type controllerClient struct {
	cc *grpc.ClientConn
}

func NewControllerClient(cc *grpc.ClientConn) ControllerClient {
	return &controllerClient{cc}
}

func (c *controllerClient) ListAppsStream(ctx context.Context, in *ListAppsRequest, opts ...grpc.CallOption) (Controller_ListAppsStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Controller_serviceDesc.Streams[0], "/controller.Controller/ListAppsStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &controllerListAppsStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Controller_ListAppsStreamClient interface {
	Recv() (*ListAppsResponse, error)
	grpc.ClientStream
}

type controllerListAppsStreamClient struct {
	grpc.ClientStream
}

func (x *controllerListAppsStreamClient) Recv() (*ListAppsResponse, error) {
	m := new(ListAppsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *controllerClient) StreamApp(ctx context.Context, in *GetAppRequest, opts ...grpc.CallOption) (Controller_StreamAppClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Controller_serviceDesc.Streams[1], "/controller.Controller/StreamApp", opts...)
	if err != nil {
		return nil, err
	}
	x := &controllerStreamAppClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Controller_StreamAppClient interface {
	Recv() (*App, error)
	grpc.ClientStream
}

type controllerStreamAppClient struct {
	grpc.ClientStream
}

func (x *controllerStreamAppClient) Recv() (*App, error) {
	m := new(App)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *controllerClient) UpdateAppMeta(ctx context.Context, in *UpdateAppRequest, opts ...grpc.CallOption) (*App, error) {
	out := new(App)
	err := c.cc.Invoke(ctx, "/controller.Controller/UpdateAppMeta", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) StreamAppRelease(ctx context.Context, in *GetAppReleaseRequest, opts ...grpc.CallOption) (Controller_StreamAppReleaseClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Controller_serviceDesc.Streams[2], "/controller.Controller/StreamAppRelease", opts...)
	if err != nil {
		return nil, err
	}
	x := &controllerStreamAppReleaseClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Controller_StreamAppReleaseClient interface {
	Recv() (*Release, error)
	grpc.ClientStream
}

type controllerStreamAppReleaseClient struct {
	grpc.ClientStream
}

func (x *controllerStreamAppReleaseClient) Recv() (*Release, error) {
	m := new(Release)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *controllerClient) CreateScale(ctx context.Context, in *CreateScaleRequest, opts ...grpc.CallOption) (*ScaleRequest, error) {
	out := new(ScaleRequest)
	err := c.cc.Invoke(ctx, "/controller.Controller/CreateScale", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) ListScaleRequestsStream(ctx context.Context, in *ListScaleRequestsRequest, opts ...grpc.CallOption) (Controller_ListScaleRequestsStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Controller_serviceDesc.Streams[3], "/controller.Controller/ListScaleRequestsStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &controllerListScaleRequestsStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Controller_ListScaleRequestsStreamClient interface {
	Recv() (*ListScaleRequestsResponse, error)
	grpc.ClientStream
}

type controllerListScaleRequestsStreamClient struct {
	grpc.ClientStream
}

func (x *controllerListScaleRequestsStreamClient) Recv() (*ListScaleRequestsResponse, error) {
	m := new(ListScaleRequestsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *controllerClient) StreamAppFormation(ctx context.Context, in *GetAppFormationRequest, opts ...grpc.CallOption) (Controller_StreamAppFormationClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Controller_serviceDesc.Streams[4], "/controller.Controller/StreamAppFormation", opts...)
	if err != nil {
		return nil, err
	}
	x := &controllerStreamAppFormationClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Controller_StreamAppFormationClient interface {
	Recv() (*Formation, error)
	grpc.ClientStream
}

type controllerStreamAppFormationClient struct {
	grpc.ClientStream
}

func (x *controllerStreamAppFormationClient) Recv() (*Formation, error) {
	m := new(Formation)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *controllerClient) GetRelease(ctx context.Context, in *GetReleaseRequest, opts ...grpc.CallOption) (*Release, error) {
	out := new(Release)
	err := c.cc.Invoke(ctx, "/controller.Controller/GetRelease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) StreamAppLog(ctx context.Context, in *StreamAppLogRequest, opts ...grpc.CallOption) (Controller_StreamAppLogClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Controller_serviceDesc.Streams[5], "/controller.Controller/StreamAppLog", opts...)
	if err != nil {
		return nil, err
	}
	x := &controllerStreamAppLogClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Controller_StreamAppLogClient interface {
	Recv() (*LogChunk, error)
	grpc.ClientStream
}

type controllerStreamAppLogClient struct {
	grpc.ClientStream
}

func (x *controllerStreamAppLogClient) Recv() (*LogChunk, error) {
	m := new(LogChunk)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *controllerClient) CreateRelease(ctx context.Context, in *CreateReleaseRequest, opts ...grpc.CallOption) (*Release, error) {
	out := new(Release)
	err := c.cc.Invoke(ctx, "/controller.Controller/CreateRelease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) StreamDeployments(ctx context.Context, in *ListDeploymentsRequest, opts ...grpc.CallOption) (Controller_StreamDeploymentsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Controller_serviceDesc.Streams[6], "/controller.Controller/StreamDeployments", opts...)
	if err != nil {
		return nil, err
	}
	x := &controllerStreamDeploymentsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Controller_StreamDeploymentsClient interface {
	Recv() (*ListDeploymentsResponse, error)
	grpc.ClientStream
}

type controllerStreamDeploymentsClient struct {
	grpc.ClientStream
}

func (x *controllerStreamDeploymentsClient) Recv() (*ListDeploymentsResponse, error) {
	m := new(ListDeploymentsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *controllerClient) CreateDeployment(ctx context.Context, in *CreateDeploymentRequest, opts ...grpc.CallOption) (Controller_CreateDeploymentClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Controller_serviceDesc.Streams[7], "/controller.Controller/CreateDeployment", opts...)
	if err != nil {
		return nil, err
	}
	x := &controllerCreateDeploymentClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Controller_CreateDeploymentClient interface {
	Recv() (*Event, error)
	grpc.ClientStream
}

type controllerCreateDeploymentClient struct {
	grpc.ClientStream
}

func (x *controllerCreateDeploymentClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ControllerServer is the server API for Controller service.
type ControllerServer interface {
	// TODO(jvatic): Rename to StreamApps
	ListAppsStream(*ListAppsRequest, Controller_ListAppsStreamServer) error
	StreamApp(*GetAppRequest, Controller_StreamAppServer) error
	UpdateAppMeta(context.Context, *UpdateAppRequest) (*App, error)
	StreamAppRelease(*GetAppReleaseRequest, Controller_StreamAppReleaseServer) error
	CreateScale(context.Context, *CreateScaleRequest) (*ScaleRequest, error)
	// TODO(jvatic): Rename to StreamScaleRequests
	ListScaleRequestsStream(*ListScaleRequestsRequest, Controller_ListScaleRequestsStreamServer) error
	StreamAppFormation(*GetAppFormationRequest, Controller_StreamAppFormationServer) error
	GetRelease(context.Context, *GetReleaseRequest) (*Release, error)
	StreamAppLog(*StreamAppLogRequest, Controller_StreamAppLogServer) error
	CreateRelease(context.Context, *CreateReleaseRequest) (*Release, error)
	StreamDeployments(*ListDeploymentsRequest, Controller_StreamDeploymentsServer) error
	// TODO(jvatic): Use DeploymentEvent instead of Event
	CreateDeployment(*CreateDeploymentRequest, Controller_CreateDeploymentServer) error
}

// UnimplementedControllerServer can be embedded to have forward compatible implementations.
type UnimplementedControllerServer struct {
}

func (*UnimplementedControllerServer) ListAppsStream(req *ListAppsRequest, srv Controller_ListAppsStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method ListAppsStream not implemented")
}
func (*UnimplementedControllerServer) StreamApp(req *GetAppRequest, srv Controller_StreamAppServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamApp not implemented")
}
func (*UnimplementedControllerServer) UpdateAppMeta(ctx context.Context, req *UpdateAppRequest) (*App, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAppMeta not implemented")
}
func (*UnimplementedControllerServer) StreamAppRelease(req *GetAppReleaseRequest, srv Controller_StreamAppReleaseServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamAppRelease not implemented")
}
func (*UnimplementedControllerServer) CreateScale(ctx context.Context, req *CreateScaleRequest) (*ScaleRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateScale not implemented")
}
func (*UnimplementedControllerServer) ListScaleRequestsStream(req *ListScaleRequestsRequest, srv Controller_ListScaleRequestsStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method ListScaleRequestsStream not implemented")
}
func (*UnimplementedControllerServer) StreamAppFormation(req *GetAppFormationRequest, srv Controller_StreamAppFormationServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamAppFormation not implemented")
}
func (*UnimplementedControllerServer) GetRelease(ctx context.Context, req *GetReleaseRequest) (*Release, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRelease not implemented")
}
func (*UnimplementedControllerServer) StreamAppLog(req *StreamAppLogRequest, srv Controller_StreamAppLogServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamAppLog not implemented")
}
func (*UnimplementedControllerServer) CreateRelease(ctx context.Context, req *CreateReleaseRequest) (*Release, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRelease not implemented")
}
func (*UnimplementedControllerServer) StreamDeployments(req *ListDeploymentsRequest, srv Controller_StreamDeploymentsServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamDeployments not implemented")
}
func (*UnimplementedControllerServer) CreateDeployment(req *CreateDeploymentRequest, srv Controller_CreateDeploymentServer) error {
	return status.Errorf(codes.Unimplemented, "method CreateDeployment not implemented")
}

func RegisterControllerServer(s *grpc.Server, srv ControllerServer) {
	s.RegisterService(&_Controller_serviceDesc, srv)
}

func _Controller_ListAppsStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListAppsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ControllerServer).ListAppsStream(m, &controllerListAppsStreamServer{stream})
}

type Controller_ListAppsStreamServer interface {
	Send(*ListAppsResponse) error
	grpc.ServerStream
}

type controllerListAppsStreamServer struct {
	grpc.ServerStream
}

func (x *controllerListAppsStreamServer) Send(m *ListAppsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Controller_StreamApp_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetAppRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ControllerServer).StreamApp(m, &controllerStreamAppServer{stream})
}

type Controller_StreamAppServer interface {
	Send(*App) error
	grpc.ServerStream
}

type controllerStreamAppServer struct {
	grpc.ServerStream
}

func (x *controllerStreamAppServer) Send(m *App) error {
	return x.ServerStream.SendMsg(m)
}

func _Controller_UpdateAppMeta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).UpdateAppMeta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/UpdateAppMeta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).UpdateAppMeta(ctx, req.(*UpdateAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_StreamAppRelease_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetAppReleaseRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ControllerServer).StreamAppRelease(m, &controllerStreamAppReleaseServer{stream})
}

type Controller_StreamAppReleaseServer interface {
	Send(*Release) error
	grpc.ServerStream
}

type controllerStreamAppReleaseServer struct {
	grpc.ServerStream
}

func (x *controllerStreamAppReleaseServer) Send(m *Release) error {
	return x.ServerStream.SendMsg(m)
}

func _Controller_CreateScale_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateScaleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).CreateScale(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/CreateScale",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).CreateScale(ctx, req.(*CreateScaleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_ListScaleRequestsStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListScaleRequestsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ControllerServer).ListScaleRequestsStream(m, &controllerListScaleRequestsStreamServer{stream})
}

type Controller_ListScaleRequestsStreamServer interface {
	Send(*ListScaleRequestsResponse) error
	grpc.ServerStream
}

type controllerListScaleRequestsStreamServer struct {
	grpc.ServerStream
}

func (x *controllerListScaleRequestsStreamServer) Send(m *ListScaleRequestsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Controller_StreamAppFormation_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetAppFormationRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ControllerServer).StreamAppFormation(m, &controllerStreamAppFormationServer{stream})
}

type Controller_StreamAppFormationServer interface {
	Send(*Formation) error
	grpc.ServerStream
}

type controllerStreamAppFormationServer struct {
	grpc.ServerStream
}

func (x *controllerStreamAppFormationServer) Send(m *Formation) error {
	return x.ServerStream.SendMsg(m)
}

func _Controller_GetRelease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReleaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).GetRelease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/GetRelease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).GetRelease(ctx, req.(*GetReleaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_StreamAppLog_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamAppLogRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ControllerServer).StreamAppLog(m, &controllerStreamAppLogServer{stream})
}

type Controller_StreamAppLogServer interface {
	Send(*LogChunk) error
	grpc.ServerStream
}

type controllerStreamAppLogServer struct {
	grpc.ServerStream
}

func (x *controllerStreamAppLogServer) Send(m *LogChunk) error {
	return x.ServerStream.SendMsg(m)
}

func _Controller_CreateRelease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateReleaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).CreateRelease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/CreateRelease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).CreateRelease(ctx, req.(*CreateReleaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_StreamDeployments_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListDeploymentsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ControllerServer).StreamDeployments(m, &controllerStreamDeploymentsServer{stream})
}

type Controller_StreamDeploymentsServer interface {
	Send(*ListDeploymentsResponse) error
	grpc.ServerStream
}

type controllerStreamDeploymentsServer struct {
	grpc.ServerStream
}

func (x *controllerStreamDeploymentsServer) Send(m *ListDeploymentsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Controller_CreateDeployment_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CreateDeploymentRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ControllerServer).CreateDeployment(m, &controllerCreateDeploymentServer{stream})
}

type Controller_CreateDeploymentServer interface {
	Send(*Event) error
	grpc.ServerStream
}

type controllerCreateDeploymentServer struct {
	grpc.ServerStream
}

func (x *controllerCreateDeploymentServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

var _Controller_serviceDesc = grpc.ServiceDesc{
	ServiceName: "controller.Controller",
	HandlerType: (*ControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateAppMeta",
			Handler:    _Controller_UpdateAppMeta_Handler,
		},
		{
			MethodName: "CreateScale",
			Handler:    _Controller_CreateScale_Handler,
		},
		{
			MethodName: "GetRelease",
			Handler:    _Controller_GetRelease_Handler,
		},
		{
			MethodName: "CreateRelease",
			Handler:    _Controller_CreateRelease_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListAppsStream",
			Handler:       _Controller_ListAppsStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "StreamApp",
			Handler:       _Controller_StreamApp_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "StreamAppRelease",
			Handler:       _Controller_StreamAppRelease_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListScaleRequestsStream",
			Handler:       _Controller_ListScaleRequestsStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "StreamAppFormation",
			Handler:       _Controller_StreamAppFormation_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "StreamAppLog",
			Handler:       _Controller_StreamAppLog_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "StreamDeployments",
			Handler:       _Controller_StreamDeployments_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CreateDeployment",
			Handler:       _Controller_CreateDeployment_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "controller.proto",
}
